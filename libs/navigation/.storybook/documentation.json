{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "MenuItem",
            "id": "class-MenuItem-8fb81cfe72111ddb07cc8c7da4aebd17b90be2d46af64e1352ed5b73e18b92df47d2179eadf2beda06dbbde542143033b1dc0aa404adc627a04c8d94cfc288ce",
            "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\n\nconst modules = [\n  CommonModule,\n  RouterModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatTooltipModule,\n];\n\nexport class MenuItem {\n  label!: string;\n  id?: number;\n  icon?: string;\n  iconColor?: 'primary' | 'accent' | 'warn';\n  badge?: string;\n  badgeColor?: 'primary' | 'accent' | 'warn';\n  route?: string;\n  subs?: MenuItem[];\n}\n\n@Component({\n  selector: 'wt-nav-menu',\n  standalone: true,\n  imports: [...modules],\n  templateUrl: './nav-menu.component.html',\n  styleUrl: './nav-menu.component.scss',\n})\nexport class NavMenuComponent {\n  @Input() trigerIconColor?: string;\n  @Input() trigerIcon?: string;\n  @Input() trigerLabel?: string;\n  @Input() menuItems?: MenuItem[];\n\n  /**\n   * @ignore internal input\n   */\n  @Input() isSubmenu = false;\n\n  @Output() menuClickEvent = new EventEmitter<MenuItem>();\n\n  handleClickEvent(event: MenuItem) {\n    this.menuClickEvent.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "badgeColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "subs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 28
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NavListItem",
            "id": "class-NavListItem-84baa0656f101ea67c37ddbc6f8577a815d034f50c7191ea791765e2f66a589f9af39d62e23d65b937f50b1f9195610540968d871c6c517579fb5be27c9617b0",
            "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { RouterModule } from '@angular/router';\nconst modules = [\n  CommonModule,\n  MatListModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  RouterModule,\n];\n\nexport class NavListItem {\n  label!: string;\n  id?: number;\n  subLabel?: string;\n  icon?: string;\n  iconColor?: 'primary' | 'accent' | 'warn';\n  badge?: string;\n  badgeColor?: 'primary' | 'accent' | 'warn';\n  route?: string;\n}\n\n@Component({\n  selector: 'wt-nav-list',\n  standalone: true,\n  imports: [...modules],\n  templateUrl: './nav-list.component.html',\n  styleUrl: './nav-list.component.scss',\n})\nexport class NavListComponent {\n  activeItem = '';\n\n  @Input() title?: string;\n  @Input() listItems?: NavListItem[];\n  @Output() clickEvent = new EventEmitter<NavListItem>();\n\n  handleClickEvent(item: NavListItem) {\n    this.activeItem = item.label;\n    this.clickEvent.emit(item);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "badgeColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "subLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "FloatingPanelDirective",
            "id": "directive-FloatingPanelDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtFloatingPanel</p>\n",
            "rawdescription": "\n\nwtFloatingPanel\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtFloatingPanel]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "LeftPanelDirective",
            "id": "directive-LeftPanelDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtLeftPanel</p>\n",
            "rawdescription": "\n\nwtLeftPanel\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtLeftPanel]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "MainPanelDirective",
            "id": "directive-MainPanelDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtMainPanel</p>\n",
            "rawdescription": "\n\nwtMainPanel\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtMainPanel]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "RightPanelDirective",
            "id": "directive-RightPanelDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtRightPanel</p>\n",
            "rawdescription": "\n\nwtRightPanel\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtRightPanel]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "StatusbarLeftDirective",
            "id": "directive-StatusbarLeftDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtStatusbarLeft</p>\n",
            "rawdescription": "\n\nwtStatusbarLeft\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtStatusbarLeft]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "StatusbarRightDirective",
            "id": "directive-StatusbarRightDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtStatusbarRight</p>\n",
            "rawdescription": "\n\nwtStatusbarRight\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtStatusbarRight]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "TemplateDirective",
            "id": "directive-TemplateDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n\n\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtTemplate]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ToolbarLeftDirective",
            "id": "directive-ToolbarLeftDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtToolbarLeft</p>\n",
            "rawdescription": "\n\nwtToolbarLeft\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtToolbarLeft]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        },
        {
            "name": "ToolbarRightDirective",
            "id": "directive-ToolbarRightDirective-ceaf8e487dae05046743b1247c49049f0ece042551b442bfca2147fad07397b3d858690303b52ef206a8f09515c25e68bf8aa4abd86497cb08b674d0b695123a",
            "file": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
            "type": "directive",
            "description": "<p>wtToolbarRight</p>\n",
            "rawdescription": "\n\nwtToolbarRight\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n *\r\n */\r\n@Directive({ selector: '[wtTemplate]' })\r\nexport class TemplateDirective<T = unknown> {\r\n  constructor(public readonly templateRef: TemplateRef<T>) {}\r\n}\r\n\r\n/**\r\n * wtFloatingPanel\r\n */\r\n@Directive({ selector: '[wtFloatingPanel]', standalone: true })\r\nexport class FloatingPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtMainPanel\r\n */\r\n@Directive({ selector: '[wtMainPanel]', standalone: true })\r\nexport class MainPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtLeftPanel\r\n */\r\n@Directive({ selector: '[wtLeftPanel]', standalone: true })\r\nexport class LeftPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtRightPanel\r\n */\r\n@Directive({ selector: '[wtRightPanel]', standalone: true })\r\nexport class RightPanelDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarLeft\r\n */\r\n@Directive({ selector: '[wtToolbarLeft]', standalone: true })\r\nexport class ToolbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtToolbarRight\r\n */\r\n@Directive({ selector: '[wtToolbarRight]', standalone: true })\r\nexport class ToolbarRightDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarLeft\r\n */\r\n@Directive({ selector: '[wtStatusbarLeft]', standalone: true })\r\nexport class StatusbarLeftDirective extends TemplateDirective {}\r\n/**\r\n * wtStatusbarRight\r\n */\r\n@Directive({ selector: '[wtStatusbarRight]', standalone: true })\r\nexport class StatusbarRightDirective extends TemplateDirective {}\r\n",
            "selector": "[wtToolbarRight]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "TemplateDirective"
                    }
                }
            ],
            "methodsClass": [],
            "extends": [
                "TemplateDirective"
            ]
        }
    ],
    "components": [
        {
            "name": "AppLayoutComponent",
            "id": "component-AppLayoutComponent-cd84b39c6f40f9802c4e68efab85b2c14d6e5e896a700767d33c4dfa8dd78ced699295024121695627bc01d031e315eb46bd2d031387cf669d8cfb5ba8a33c90",
            "file": "libs/navigation/src/lib/app-layout/app-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-app-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$isHandset",
                    "defaultValue": "this.breakPointObserver\n    .observe([Breakpoints.XSmall])\n    .pipe(\n      debounceTime(200),\n      map((e) => {\n        return e.matches;\n      })\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "<p>Is viewport matches handset layout size.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nIs viewport matches handset layout size.\n",
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is dark mode</p>\n",
                    "line": 77,
                    "rawdescription": "\n\nIs dark mode\n",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "sidenavLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavLeft'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "sidenavRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavRight'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtFloating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FloatingPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtFloating&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 72,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtFloating> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FloatingPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtLeftPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<LeftPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtLeftPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 36,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtLeftPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "LeftPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtMainPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<MainPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtMainPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 30,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtMainPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MainPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtRightPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<RightPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtRightPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 42,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtRightPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "RightPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtStatusbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 60,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtStatusbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 66,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtToolbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 48,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtToolbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 54,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "closeSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "closeSidenavs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle darkmode\n",
                    "description": "<p>Toggle darkmode</p>\n",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NavigationModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { NavigationComponent } from '../navigation/navigation.component';\n\n@Component({\n  selector: 'wt-app-layout',\n  standalone: true,\n  imports: [NavigationModule],\n  templateUrl: './app-layout.component.html',\n  styleUrl: './app-layout.component.scss',\n})\nexport class AppLayoutComponent extends NavigationComponent {}\n",
            "styleUrl": "./app-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "NavigationComponent"
            ],
            "templateData": "<ng-template #renderTemplates let-templates=\"templates\">\n  <!-- Right sidenav content -->\n  @for(ref of templates; track ref){\n  <ng-container *ngTemplateOutlet=\"ref.templateRef\"></ng-container>\n  }\n</ng-template>\n\n<div class=\"root-layout-container\" [class.dark-theme]=\"isDarkMode\">\n  <mat-toolbar color=\"primary\">\n    <div>\n      <button mat-icon-button (click)=\"sidenavLeft.toggle()\">\n        <mat-icon>\n          {{ sidenavLeft.opened ? 'menu_open' : 'menu' }}\n        </mat-icon>\n      </button>\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtToolbarLeft }\n        \"\n      ></ng-container>\n    </div>\n    <div>\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtToolbarRight }\n        \"\n      ></ng-container>\n      <div>\n        <button mat-icon-button (click)=\"sidenavRight.toggle()\">\n          <mat-icon>\n            {{ sidenavRight.opened ? 'chevron_right' : 'chevron_left' }}\n          </mat-icon>\n        </button>\n      </div>\n    </div>\n  </mat-toolbar>\n\n  <mat-sidenav-container>\n    <!-- Left sidenav -->\n    <mat-sidenav\n      #sidenavLeft\n      position=\"start\"\n      [mode]=\"($isHandset | async) === false ? 'side' : 'over'\"\n      [opened]=\"($isHandset | async) === false\"\n    >\n      <ng-container\n        *ngTemplateOutlet=\"renderTemplates; context: { templates: wtLeftPanel }\"\n      ></ng-container>\n    </mat-sidenav>\n\n    <!-- Right sidenav -->\n    <mat-sidenav\n      #sidenavRight\n      position=\"end\"\n      [mode]=\"($isHandset | async) === false ? 'side' : 'over'\"\n    >\n      <!-- Right sidenav content -->\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtRightPanel }\n        \"\n      ></ng-container>\n    </mat-sidenav>\n\n    <!-- Main content -->\n    <mat-sidenav-content>\n      <ng-container\n        *ngTemplateOutlet=\"renderTemplates; context: { templates: wtMainPanel }\"\n      ></ng-container>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n  <!-- Status bar -->\n  <mat-toolbar color=\"primary\">\n    <div>\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtStatusbarLeft }\n        \"\n      ></ng-container>\n    </div>\n    <div>\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtStatusbarRight }\n        \"\n      ></ng-container>\n    </div>\n  </mat-toolbar>\n\n  <div class=\"floating-panel\" *ngIf=\"wtFloating.length > 0\">\n    <ng-container\n      *ngTemplateOutlet=\"renderTemplates; context: { templates: wtFloating }\"\n    ></ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-01b1269389233b2532763a0a70a20889751e342ee5313bdf58b764f78bb5232cfe30135da7613db10d25a06785906b0aa3b71d635ba7b1332a01edbf27153c87",
            "file": "libs/navigation/src/lib/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$isHandset",
                    "defaultValue": "this.breakPointObserver\n    .observe([Breakpoints.XSmall])\n    .pipe(\n      debounceTime(200),\n      map((e) => {\n        return e.matches;\n      })\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "<p>Is viewport matches handset layout size.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nIs viewport matches handset layout size.\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is dark mode</p>\n",
                    "line": 77,
                    "rawdescription": "\n\nIs dark mode\n"
                },
                {
                    "name": "sidenavLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavLeft'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "sidenavRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavRight'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtFloating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FloatingPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtFloating&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 72,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtFloating> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FloatingPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtLeftPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<LeftPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtLeftPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 36,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtLeftPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "LeftPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtMainPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<MainPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtMainPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 30,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtMainPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MainPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtRightPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<RightPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtRightPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 42,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtRightPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "RightPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtStatusbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 60,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtStatusbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 66,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtToolbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 48,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wtToolbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 54,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeSidenavs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle darkmode\n",
                    "description": "<p>Toggle darkmode</p>\n"
                },
                {
                    "name": "toggleSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, debounceTime, map } from 'rxjs';\nimport {\n  FloatingPanelDirective,\n  LeftPanelDirective,\n  MainPanelDirective,\n  RightPanelDirective,\n  StatusbarLeftDirective,\n  StatusbarRightDirective,\n  ToolbarLeftDirective,\n  ToolbarRightDirective,\n} from './directives/template.directive';\nimport { MatSidenav } from '@angular/material/sidenav';\n@Component({ template: '' })\nexport abstract class NavigationComponent {\n  @ViewChild('sidenavLeft') sidenavLeft!: MatSidenav;\n  @ViewChild('sidenavRight') sidenavRight!: MatSidenav;\n\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtMainPanel> Content </ng-template>`\n   */\n  @ContentChildren(MainPanelDirective)\n  wtMainPanel?: QueryList<MainPanelDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtLeftPanel> Content </ng-template>`\n   */\n  @ContentChildren(LeftPanelDirective)\n  wtLeftPanel?: QueryList<LeftPanelDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtRightPanel> Content </ng-template>`\n   */\n  @ContentChildren(RightPanelDirective)\n  wtRightPanel?: QueryList<RightPanelDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtToolbarLeft> Content </ng-template>`\n   */\n  @ContentChildren(ToolbarLeftDirective)\n  wtToolbarLeft?: QueryList<ToolbarLeftDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtToolbarRight> Content </ng-template>`\n   */\n  @ContentChildren(ToolbarRightDirective)\n  wtToolbarRight?: QueryList<ToolbarRightDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtStatusbarLeft> Content </ng-template>`\n   */\n  @ContentChildren(StatusbarLeftDirective)\n  wtStatusbarLeft?: QueryList<StatusbarLeftDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtStatusbarRight> Content </ng-template>`\n   */\n  @ContentChildren(StatusbarRightDirective)\n  wtStatusbarRight?: QueryList<StatusbarRightDirective>;\n  /**\n   * Inject template into navigation layout\n   * `<ng-template wtFloating> Content </ng-template>`\n   */\n  @ContentChildren(FloatingPanelDirective)\n  wtFloating?: QueryList<FloatingPanelDirective>;\n\n  /**\n   * Is dark mode\n   */\n  isDarkMode: boolean = false;\n\n  /**\n   * Is viewport matches handset layout size.\n   */\n  readonly $isHandset: Observable<boolean> = this.breakPointObserver\n    .observe([Breakpoints.XSmall])\n    .pipe(\n      debounceTime(200),\n      map((e) => {\n        return e.matches;\n      })\n    );\n\n  constructor(protected readonly breakPointObserver: BreakpointObserver) {}\n\n  /**\n   * Toggle darkmode\n   */\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n  }\n\n  closeSidenavLeft() {\n    this.sidenavLeft.close();\n  }\n\n  closeSidenavRight() {\n    this.sidenavRight.close();\n  }\n\n  closeSidenavs() {\n    this.closeSidenavLeft();\n    this.closeSidenavRight();\n  }\n  toggleSidenavLeft() {\n    this.sidenavLeft.toggle();\n  }\n\n  toggleSidenavRight() {\n    this.sidenavRight.toggle();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakPointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 89,
                "jsdoctags": [
                    {
                        "name": "breakPointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "NavListComponent",
            "id": "component-NavListComponent-84baa0656f101ea67c37ddbc6f8577a815d034f50c7191ea791765e2f66a589f9af39d62e23d65b937f50b1f9195610540968d871c6c517579fb5be27c9617b0",
            "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-nav-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "listItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "NavListItem[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter<NavListItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClickEvent",
                    "args": [
                        {
                            "name": "item",
                            "type": "NavListItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "NavListItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "modules",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { RouterModule } from '@angular/router';\nconst modules = [\n  CommonModule,\n  MatListModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  RouterModule,\n];\n\nexport class NavListItem {\n  label!: string;\n  id?: number;\n  subLabel?: string;\n  icon?: string;\n  iconColor?: 'primary' | 'accent' | 'warn';\n  badge?: string;\n  badgeColor?: 'primary' | 'accent' | 'warn';\n  route?: string;\n}\n\n@Component({\n  selector: 'wt-nav-list',\n  standalone: true,\n  imports: [...modules],\n  templateUrl: './nav-list.component.html',\n  styleUrl: './nav-list.component.scss',\n})\nexport class NavListComponent {\n  activeItem = '';\n\n  @Input() title?: string;\n  @Input() listItems?: NavListItem[];\n  @Output() clickEvent = new EventEmitter<NavListItem>();\n\n  handleClickEvent(item: NavListItem) {\n    this.activeItem = item.label;\n    this.clickEvent.emit(item);\n  }\n}\n",
            "styleUrl": "./nav-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-nav-list>\n  <div mat-subheader>\n    <h3>{{ title }}</h3>\n  </div>\n  @for( item of listItems; track item){\n  <mat-list-item\n    class=\"mat-nav-list-item\"\n    (click)=\"handleClickEvent(item)\"\n    [class.active]=\"activeItem === item.label\"\n    [routerLink]=\"[item.route ?? item.label]\"\n    routerLinkActive=\"active\"\n  >\n    <div matListItemLine>{{ item.label | titlecase }}</div>\n    <span matListItemIcon>\n      <mat-icon\n        class=\"fill\"\n        [color]=\"item.iconColor\"\n        [matBadge]=\"item.badge\"\n        [matBadgeColor]=\"item.badgeColor\"\n      >\n        {{ item.icon }}\n      </mat-icon>\n    </span>\n  </mat-list-item>\n  }\n</mat-nav-list>\n"
        },
        {
            "name": "NavMenuComponent",
            "id": "component-NavMenuComponent-8fb81cfe72111ddb07cc8c7da4aebd17b90be2d46af64e1352ed5b73e18b92df47d2179eadf2beda06dbbde542143033b1dc0aa404adc627a04c8d94cfc288ce",
            "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-nav-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "trigerIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "trigerIconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "trigerLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClickEvent",
                    "defaultValue": "new EventEmitter<MenuItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "modules",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\n\nconst modules = [\n  CommonModule,\n  RouterModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatTooltipModule,\n];\n\nexport class MenuItem {\n  label!: string;\n  id?: number;\n  icon?: string;\n  iconColor?: 'primary' | 'accent' | 'warn';\n  badge?: string;\n  badgeColor?: 'primary' | 'accent' | 'warn';\n  route?: string;\n  subs?: MenuItem[];\n}\n\n@Component({\n  selector: 'wt-nav-menu',\n  standalone: true,\n  imports: [...modules],\n  templateUrl: './nav-menu.component.html',\n  styleUrl: './nav-menu.component.scss',\n})\nexport class NavMenuComponent {\n  @Input() trigerIconColor?: string;\n  @Input() trigerIcon?: string;\n  @Input() trigerLabel?: string;\n  @Input() menuItems?: MenuItem[];\n\n  /**\n   * @ignore internal input\n   */\n  @Input() isSubmenu = false;\n\n  @Output() menuClickEvent = new EventEmitter<MenuItem>();\n\n  handleClickEvent(event: MenuItem) {\n    this.menuClickEvent.emit(event);\n  }\n}\n",
            "styleUrl": "./nav-menu.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  mat-icon-button\n  [matMenuTriggerFor]=\"menuRef\"\n  [attr.aria-label]=\"trigerLabel\"\n  *ngIf=\"!isSubmenu\"\n  [matTooltip]=\"trigerLabel ?? ''\"\n  [matTooltipPosition]=\"'below'\"\n>\n  <mat-icon class=\"fill\" [color]=\"trigerIconColor\">{{ trigerIcon }}</mat-icon>\n</button>\n\n<button\n  mat-menu-item\n  [matMenuTriggerFor]=\"menuRef\"\n  [attr.aria-label]=\"trigerLabel\"\n  *ngIf=\"isSubmenu\"\n>\n  <mat-icon class=\"fill\" [color]=\"trigerIconColor\">{{ trigerIcon }}</mat-icon>\n  <span>{{ trigerLabel }}</span>\n</button>\n\n<mat-menu #menuRef=\"matMenu\">\n  @for(item of menuItems; track item){ @if(item.subs){\n  <wt-nav-menu\n    [trigerIcon]=\"item.icon\"\n    [trigerLabel]=\"item.label\"\n    [menuItems]=\"item.subs\"\n    [isSubmenu]=\"true\"\n    (menuClickEvent)=\"handleClickEvent($event)\"\n  ></wt-nav-menu>\n  } @else {\n  <button\n    mat-menu-item\n    [routerLink]=\"item.route || item.label\"\n    (click)=\"handleClickEvent(item)\"\n  >\n    <mat-icon class=\"fill\" [color]=\"item.iconColor\">{{ item.icon }}</mat-icon>\n    <span>{{ item.label }}</span>\n  </button>\n  } }\n</mat-menu>\n"
        },
        {
            "name": "SampleAppLayoutComponent",
            "id": "component-SampleAppLayoutComponent-2013ca87d35745bc6274723db1f7c00b929ff58357ed27e58eebd4ac9770434ee3cb1836b5110ee909e52019a4a79e0b3a36480d6076792b503a72e836bd03a2",
            "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sample-app-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sampleListItems",
                    "defaultValue": "' '\n    .repeat(4)\n    .split('')\n    .map((e) => ({\n      label: 'Label',\n      icon: 'info',\n    }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavListItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NavigationModule",
                    "type": "module"
                },
                {
                    "name": "AppLayoutComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppLayoutComponent } from '../app-layout/app-layout.component';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { NavListItem } from '../navigation/nav-list/nav-list.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, NavigationModule, AppLayoutComponent],\n  templateUrl: './sample-app-layout.component.html',\n  styleUrl: './sample-app-layout.component.scss',\n})\nexport class SampleAppLayoutComponent {\n  sampleListItems: NavListItem[] = ' '\n    .repeat(4)\n    .split('')\n    .map((e) => ({\n      label: 'Label',\n      icon: 'info',\n    }));\n}\n",
            "styleUrl": "./sample-app-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<wt-app-layout>\n  <ng-template wtLeftPanel>\n    <wt-nav-list title=\"Group 1\" [listItems]=\"sampleListItems\"></wt-nav-list>\n    <wt-nav-list title=\"Group 2\" [listItems]=\"sampleListItems\"></wt-nav-list>\n  </ng-template>\n\n  <ng-template wtRightPanel>\n    <wt-nav-list title=\"Group 1\" [listItems]=\"sampleListItems\"></wt-nav-list>\n    <wt-nav-list title=\"Group 2\" [listItems]=\"sampleListItems\"></wt-nav-list>\n  </ng-template>\n\n  <ng-template wtMainPanel>\n    <h1>Start</h1>\n    @for(item of ' '.repeat(50).split(''); track item){\n    <h1>Placeholder</h1>\n    }\n    <h1>End</h1>\n  </ng-template>\n\n  <ng-template wtToolbarLeft>\n    <button mat-icon-button><mat-icon>home</mat-icon></button>\n  </ng-template>\n  <ng-template wtToolbarRight>\n    <button mat-icon-button><mat-icon>info</mat-icon></button>\n    <button mat-icon-button><mat-icon>person</mat-icon></button>\n    <button mat-icon-button><mat-icon>settings</mat-icon></button>\n  </ng-template>\n\n  <ng-template wtStatusbarLeft>\n    <button mat-icon-button><mat-icon>category</mat-icon></button>\n  </ng-template>\n  <ng-template wtStatusbarRight>\n    <button mat-icon-button>\n      <mat-icon class=\"fill\" matBadge=\"3\" matBadgeColor=\"warn\"\n        >notifications</mat-icon\n      >\n    </button>\n  </ng-template>\n\n  <ng-template wtFloatingPanel>\n    <button mat-mini-fab color=\"accent\">\n      <mat-icon class=\"fill\">message</mat-icon>\n    </button>\n  </ng-template>\n</wt-app-layout>\n"
        },
        {
            "name": "SampleWebLayoutComponent",
            "id": "component-SampleWebLayoutComponent-ac47499aa247ecad825a1131ac7baef0b2975af68415802c4afb1e0d553c23f6fe552ec5232d0dd942667fdd147e5cc63eefd1adcef0700250dccd9b86be458e",
            "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-sample-web-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sample-web-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'wt-sample-web-layout',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sample-web-layout.component.html',\n  styleUrl: './sample-web-layout.component.scss',\n})\nexport class SampleWebLayoutComponent {}\n",
            "styleUrl": "./sample-web-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>sample-web-layout works!</p>\n"
        },
        {
            "name": "WebLayoutComponent",
            "id": "component-WebLayoutComponent-2e8a2e4ea78c68352ab0bbb5abd1007f3e2b7dfb1173d30fe6cee985a3341b6d79a458b8827554d8d1bde44e112c887c0fa80f4adf9faef9b7d0093894aba75b",
            "file": "libs/navigation/src/lib/web-layout/web-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-web-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./web-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$isHandset",
                    "defaultValue": "this.breakPointObserver\n    .observe([Breakpoints.XSmall])\n    .pipe(\n      debounceTime(200),\n      map((e) => {\n        return e.matches;\n      })\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "<p>Is viewport matches handset layout size.</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nIs viewport matches handset layout size.\n",
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Is dark mode</p>\n",
                    "line": 77,
                    "rawdescription": "\n\nIs dark mode\n",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "sidenavLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavLeft'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "sidenavRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavRight'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtFloating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FloatingPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtFloating&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 72,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtFloating> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FloatingPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtLeftPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<LeftPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtLeftPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 36,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtLeftPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "LeftPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtMainPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<MainPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtMainPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 30,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtMainPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MainPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtRightPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<RightPanelDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtRightPanel&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 42,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtRightPanel> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "RightPanelDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtStatusbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 60,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtStatusbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StatusbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtStatusbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 66,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtStatusbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StatusbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtToolbarLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarLeftDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarLeft&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 48,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarLeft> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarLeftDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "wtToolbarRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ToolbarRightDirective>",
                    "optional": true,
                    "description": "<p>Inject template into navigation layout\n<code>&lt;ng-template wtToolbarRight&gt; Content &lt;/ng-template&gt;</code></p>\n",
                    "line": 54,
                    "rawdescription": "\n\nInject template into navigation layout\n`<ng-template wtToolbarRight> Content </ng-template>`\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ToolbarRightDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "closeSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "closeSidenavs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle darkmode\n",
                    "description": "<p>Toggle darkmode</p>\n",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleSidenavLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleSidenavRight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NavigationModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { NavigationComponent } from '../navigation/navigation.component';\n\n@Component({\n  selector: 'wt-web-layout',\n  standalone: true,\n  imports: [NavigationModule],\n  templateUrl: './web-layout.component.html',\n  styleUrl: './web-layout.component.scss',\n})\nexport class WebLayoutComponent extends NavigationComponent {}\n",
            "styleUrl": "./web-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "NavigationComponent"
            ],
            "templateData": "<ng-template #renderTemplates let-templates=\"templates\">\n  <!-- Right sidenav content -->\n  @for(ref of templates; track ref){\n  <ng-container *ngTemplateOutlet=\"ref.templateRef\"></ng-container>\n  }\n</ng-template>\n\n<div class=\"root-navigation-container\">\n  <mat-toolbar color=\"primary\">\n    <div class=\"row space-between full\">\n      <div class=\"row\">\n        <button mat-icon-button (click)=\"sidenavLeft.toggle()\">\n          <mat-icon>{{ sidenavLeft.opened ? 'menu_open' : 'menu' }}</mat-icon>\n        </button>\n        <ng-container\n          *ngTemplateOutlet=\"\n            renderTemplates;\n            context: { templates: wtToolbarLeft }\n          \"\n        ></ng-container>\n      </div>\n      <div class=\"row\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            renderTemplates;\n            context: { templates: wtToolbarLeft }\n          \"\n        ></ng-container>\n        <div class=\"row\">\n          <button mat-icon-button (click)=\"sidenavRight.toggle()\">\n            <mat-icon>\n              {{ sidenavRight.opened ? 'chevron_right' : 'chevron_left' }}\n            </mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </mat-toolbar>\n\n  <mat-sidenav-container>\n    <mat-sidenav #sidenavLeft position=\"start\">\n      <ng-container\n        *ngTemplateOutlet=\"renderTemplates; context: { templates: wtLeftPanel }\"\n      ></ng-container>\n    </mat-sidenav>\n    <mat-sidenav #sidenavRight position=\"end\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          renderTemplates;\n          context: { templates: wtRightPanel }\n        \"\n      ></ng-container>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <ng-container\n        *ngTemplateOutlet=\"renderTemplates; context: { templates: wtMainPanel }\"\n      ></ng-container>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n  <!-- Status bar -->\n  <mat-toolbar color=\"primary\">\n    <div class=\"row space-between full\">\n      <div class=\"row\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            renderTemplates;\n            context: { templates: wtStatusbarLeft }\n          \"\n        ></ng-container>\n      </div>\n      <div class=\"row\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            renderTemplates;\n            context: { templates: wtStatusbarRight }\n          \"\n        ></ng-container>\n      </div>\n    </div>\n  </mat-toolbar>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "NavigationModule",
            "id": "module-NavigationModule-a12bb341361baf608150e7f4a0649e05b344b797b04699975ac27917384cbad4c87e0f9a558526e9109651b2c71313f2e49813360a4a3be6f9a63048009ad029",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/navigation/src/lib/navigation/navigation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport {\r\n  FloatingPanelDirective,\r\n  LeftPanelDirective,\r\n  MainPanelDirective,\r\n  RightPanelDirective,\r\n  StatusbarLeftDirective,\r\n  StatusbarRightDirective,\r\n  ToolbarLeftDirective,\r\n  ToolbarRightDirective,\r\n} from './directives/template.directive';\r\nimport { NavListComponent } from './nav-list/nav-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\n\r\nconst directives = [\r\n  FloatingPanelDirective,\r\n  LeftPanelDirective,\r\n  MainPanelDirective,\r\n  RightPanelDirective,\r\n  StatusbarLeftDirective,\r\n  StatusbarRightDirective,\r\n  ToolbarLeftDirective,\r\n  ToolbarRightDirective,\r\n];\r\n\r\nconst modules = [\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatBadgeModule,\r\n  MatToolbarModule,\r\n  NavMenuComponent,\r\n  NavListComponent,\r\n  MatSidenavModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [...modules, ...directives],\r\n  exports: [...modules, ...directives],\r\n})\r\nexport class NavigationModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FloatingPanelDirective"
                        },
                        {
                            "name": "LeftPanelDirective"
                        },
                        {
                            "name": "MainPanelDirective"
                        },
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavMenuComponent"
                        },
                        {
                            "name": "RightPanelDirective"
                        },
                        {
                            "name": "StatusbarLeftDirective"
                        },
                        {
                            "name": "StatusbarRightDirective"
                        },
                        {
                            "name": "ToolbarLeftDirective"
                        },
                        {
                            "name": "ToolbarRightDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FloatingPanelDirective"
                        },
                        {
                            "name": "LeftPanelDirective"
                        },
                        {
                            "name": "MainPanelDirective"
                        },
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavMenuComponent"
                        },
                        {
                            "name": "RightPanelDirective"
                        },
                        {
                            "name": "StatusbarLeftDirective"
                        },
                        {
                            "name": "StatusbarRightDirective"
                        },
                        {
                            "name": "ToolbarLeftDirective"
                        },
                        {
                            "name": "ToolbarRightDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "directives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/navigation.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  FloatingPanelDirective,\r\n  LeftPanelDirective,\r\n  MainPanelDirective,\r\n  RightPanelDirective,\r\n  StatusbarLeftDirective,\r\n  StatusbarRightDirective,\r\n  ToolbarLeftDirective,\r\n  ToolbarRightDirective,\r\n]"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-web-layout works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppLayoutComponent>",
                "defaultValue": "{\n  component: AppLayoutComponent,\n  title: 'AppLayoutComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        importProvidersFrom(BrowserAnimationsModule, NavigationModule),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleAppLayoutComponent>",
                "defaultValue": "{\n  component: SampleAppLayoutComponent,\n  title: 'SampleAppLayoutComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleWebLayoutComponent>",
                "defaultValue": "{\n  component: SampleWebLayoutComponent,\n  title: 'SampleWebLayoutComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<WebLayoutComponent>",
                "defaultValue": "{\n  component: WebLayoutComponent,\n  title: 'WebLayoutComponent',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListComponent>",
                "defaultValue": "{\n  title: 'NavListComponent',\n  component: NavListComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavMenuComponent>",
                "defaultValue": "{\n  component: NavMenuComponent,\n  title: 'NavMenuComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/navigation.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatBadgeModule,\r\n  MatToolbarModule,\r\n  NavMenuComponent,\r\n  NavListComponent,\r\n  MatSidenavModule,\r\n]"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  MatListModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  RouterModule,\n]"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  RouterModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatTooltipModule,\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Nav List Title',\n    listItems: [\n      {\n        label: 'Home',\n        icon: 'home',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n      {\n        label: 'About',\n        icon: 'info',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n      {\n        label: 'Services',\n        icon: 'apps',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n    ],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    trigerIcon: 'settings',\n    trigerLabel: 'Settings',\n    trigerIconColor: 'primary',\n    menuItems: [\n      {\n        label: 'Common',\n        icon: 'info',\n        subs: [\n          { label: 'Sub 1', icon: 'info', iconColor: 'primary' },\n          { label: 'Sub 2', icon: 'info', iconColor: 'accent' },\n          { label: 'Sub 3', icon: 'info', iconColor: 'warn' },\n          { label: 'Sub 4', icon: 'info', iconColor: 'primary' },\n          { label: 'Sub 5', icon: 'info', iconColor: 'accent' },\n        ],\n      },\n    ],\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppLayoutComponent>",
                "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleAppLayoutComponent>",
                "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleWebLayoutComponent>",
                "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<WebLayoutComponent>",
                "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListComponent>",
                "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavMenuComponent>",
                "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/navigation/src/lib/navigation/navigation.module.ts": [
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/navigation.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  FloatingPanelDirective,\r\n  LeftPanelDirective,\r\n  MainPanelDirective,\r\n  RightPanelDirective,\r\n  StatusbarLeftDirective,\r\n  StatusbarRightDirective,\r\n  ToolbarLeftDirective,\r\n  ToolbarRightDirective,\r\n]"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/navigation.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatBadgeModule,\r\n  MatToolbarModule,\r\n  NavMenuComponent,\r\n  NavListComponent,\r\n  MatSidenavModule,\r\n]"
                }
            ],
            "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppLayoutComponent>",
                    "defaultValue": "{\n  component: AppLayoutComponent,\n  title: 'AppLayoutComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        importProvidersFrom(BrowserAnimationsModule, NavigationModule),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleAppLayoutComponent>",
                    "defaultValue": "{\n  component: SampleAppLayoutComponent,\n  title: 'SampleAppLayoutComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-web-layout works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleWebLayoutComponent>",
                    "defaultValue": "{\n  component: SampleWebLayoutComponent,\n  title: 'SampleWebLayoutComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<WebLayoutComponent>",
                    "defaultValue": "{\n  component: WebLayoutComponent,\n  title: 'WebLayoutComponent',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListComponent>",
                    "defaultValue": "{\n  title: 'NavListComponent',\n  component: NavListComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Nav List Title',\n    listItems: [\n      {\n        label: 'Home',\n        icon: 'home',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n      {\n        label: 'About',\n        icon: 'info',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n      {\n        label: 'Services',\n        icon: 'apps',\n        iconColor: 'primary',\n        badge: '1',\n        badgeColor: 'accent',\n      },\n    ],\n  },\n}"
                }
            ],
            "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: Primary.args,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavMenuComponent>",
                    "defaultValue": "{\n  component: NavMenuComponent,\n  title: 'NavMenuComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        importProvidersFrom(BrowserAnimationsModule),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    trigerIcon: 'settings',\n    trigerLabel: 'Settings',\n    trigerIconColor: 'primary',\n    menuItems: [\n      {\n        label: 'Common',\n        icon: 'info',\n        subs: [\n          { label: 'Sub 1', icon: 'info', iconColor: 'primary' },\n          { label: 'Sub 2', icon: 'info', iconColor: 'accent' },\n          { label: 'Sub 3', icon: 'info', iconColor: 'warn' },\n          { label: 'Sub 4', icon: 'info', iconColor: 'primary' },\n          { label: 'Sub 5', icon: 'info', iconColor: 'accent' },\n        ],\n      },\n    ],\n  },\n}"
                }
            ],
            "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts": [
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  MatListModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  RouterModule,\n]"
                }
            ],
            "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts": [
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  RouterModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatTooltipModule,\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppLayoutComponent>",
                    "file": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleAppLayoutComponent>",
                    "file": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleWebLayoutComponent>",
                    "file": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<WebLayoutComponent>",
                    "file": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListComponent>",
                    "file": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavMenuComponent>",
                    "file": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 14,
        "status": "low",
        "files": [
            {
                "filePath": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/app-layout/app-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLayoutComponent",
                "coveragePercent": 57,
                "coverageCount": "11/19",
                "status": "good"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FloatingPanelDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "LeftPanelDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "MainPanelDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "RightPanelDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "StatusbarLeftDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "StatusbarRightDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ToolbarLeftDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/directives/template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ToolbarRightDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NavListItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-list/nav-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/nav-menu/nav-menu.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 55,
                "coverageCount": "11/20",
                "status": "good"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/navigation.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/navigation/navigation.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-app-layout/sample-app-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleAppLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/sample-web-layout/sample-web-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleWebLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/navigation/src/lib/web-layout/web-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebLayoutComponent",
                "coveragePercent": 57,
                "coverageCount": "11/19",
                "status": "good"
            }
        ]
    }
}