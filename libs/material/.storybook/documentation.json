{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "CanActivateService",
            "id": "injectable-CanActivateService-f970b14915a22ef8707e824ba4d5f5ad1be9bc2c5ebcc948d8dabe441e83818fb827ca6631f98715a0d6ae772da636d5c7c9028715c5879bda85c22daf2447ff",
            "file": "libs/material/src/lib/api/services/can-active.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canCreate",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canView",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { ENTITY_NAME_TOKEN } from './resource.service';\r\nimport { LocalStoreService } from './local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class CanActivateService {\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) private readonly entiytName: string,\r\n    private readonly localStoreService: LocalStoreService\r\n  ) {}\r\n\r\n  private itemName(name: string) {\r\n    return `CanActivate${this.entiytName}${name}`;\r\n  }\r\n\r\n  private get(actionName: string) {\r\n    return this.localStoreService.get(this.itemName(actionName));\r\n  }\r\n\r\n  private set(actionName: string) {\r\n    this.localStoreService.set(this.itemName(actionName), true);\r\n  }\r\n\r\n  canCreate(value?: boolean) {\r\n    return true;\r\n  }\r\n  \r\n  canUpdate() {\r\n    return this.localStoreService.get(this.itemName('Update'));\r\n  }\r\n  canDelete() {\r\n    return this.localStoreService.get(this.itemName('Delete'));\r\n  }\r\n  canConfig() {\r\n    return this.localStoreService.get(this.itemName('Config'));\r\n  }\r\n  canView() {\r\n    return this.localStoreService.get(this.itemName('View'));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FiveDayRangeSelectionStrategy",
            "id": "injectable-FiveDayRangeSelectionStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LocalStoreService",
            "id": "injectable-LocalStoreService-3c9633e9e1190e14406e13239f0b888e75add0a6b0a0fef65b1850d835faadbf49207484af7f004271abed1fae5181678386c2a1fdfbb5f1300339e9bef6956e",
            "file": "libs/material/src/lib/api/services/local-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__key",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T | undefined",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Localstore Servcie is for persisting module configurations or data to browser local storeage.\nThis service should be provided because it is required for some components.</p>\n",
            "rawdescription": "\n\nLocalstore Servcie is for persisting module configurations or data to browser local storeage.\nThis service should be provided because it is required for some components.\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { APP_NAME_TOKEN, MODULE_NAME_TOKEN } from '../providers';\r\n\r\n/**\r\n * Localstore Servcie is for persisting module configurations or data to browser local storeage.\r\n * This service should be provided because it is required for some components.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalStoreService {\r\n  constructor(\r\n    @Inject(APP_NAME_TOKEN) private readonly appName: string,\r\n    @Inject(MODULE_NAME_TOKEN) private readonly moduleName: string\r\n  ) {\r\n    console.log(this.appName, this.moduleName);\r\n  }\r\n\r\n  protected __key(key: string) {\r\n    return `${this.appName}_${this.moduleName}_${key}`;\r\n  }\r\n\r\n  set(key: string, value: any) {\r\n    const valueAsString = JSON.stringify(value);\r\n    localStorage.setItem(this.__key(key), valueAsString);\r\n  }\r\n\r\n  get<T>(key: string, defaultValue?: T): T | undefined {\r\n    const value = localStorage.getItem(this.__key(key));\r\n    if (value != undefined) {\r\n      return JSON.parse(value) as T;\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ResourceService",
            "id": "injectable-ResourceService-69ea8c7c3e1f5b3fac77da4cb8cb34ca7ada40beaf1cb9fd1e5ecf0fa97f558e9d0ce92b2e0c949bf27b87c9be5331ba8bd30f408320a83f4eb27519649d6642",
            "file": "libs/material/src/lib/api/services/resource.service.ts",
            "properties": [
                {
                    "name": "allCount$",
                    "defaultValue": "inject(HttpClient)\r\n    .get<EntityMetadata>(`api/${this.nameVariants.fileName}-meta`)\r\n    .pipe(\r\n      map((data) => {\r\n        return data.count;\r\n      })\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "errorMessages$",
                    "defaultValue": "this.errors$.pipe(\r\n    map((err) => {\r\n      return err.payload.data.error.error.error.message as ErrorType[];\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "nameVariants",
                    "defaultValue": "names(this.entityName)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methods": [
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1780,
                                "end": 1782,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1774,
                                "end": 1779,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1790,
                                "end": 1797,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "nid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGenerate unique id\n",
                    "description": "<p>Generate unique id</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1656,
                                "end": 1663,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>number</p>\n"
                        }
                    ]
                },
                {
                    "name": "queryItem",
                    "args": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2077,
                                "end": 2081,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2071,
                                "end": 2076,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1923,
                                "end": 1927,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1917,
                                "end": 1922,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1935,
                                "end": 1942,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Provider, inject } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\nimport { Observable, map } from 'rxjs';\r\nimport { excludeUndefined, names } from '@webpackages/utils';\r\n\r\nexport type QueryObject = {\r\n  take?: number;\r\n  skip?: number;\r\n  orderBy?: string;\r\n  orderDir?: string;\r\n  withDeleted?: boolean;\r\n  search?: string;\r\n};\r\n\r\nexport const ENTITY_NAME_TOKEN = 'ENTITY_NAME_TOKEN';\r\n\r\nexport function provideEntityName(name: string): Provider {\r\n  return {\r\n    provide: ENTITY_NAME_TOKEN,\r\n    useValue: name,\r\n  };\r\n}\r\n\r\nexport type ErrorType = {\r\n  property: string;\r\n  constraints: Record<string, string>;\r\n};\r\n\r\nexport type EntityMetadata = {\r\n  count: number;\r\n};\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class ResourceService<T> extends EntityCollectionServiceBase<T> {\r\n  errorMessages$ = this.errors$.pipe(\r\n    map((err) => {\r\n      return err.payload.data.error.error.error.message as ErrorType[];\r\n    })\r\n  );\r\n\r\n  nameVariants = names(this.entityName);\r\n\r\n  allCount$: Observable<number> = inject(HttpClient)\r\n    .get<EntityMetadata>(`api/${this.nameVariants.fileName}-meta`)\r\n    .pipe(\r\n      map((data) => {\r\n        return data.count;\r\n      })\r\n    );\r\n\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) entityName: string,\r\n    serviceElementsFactory: EntityCollectionServiceElementsFactory\r\n  ) {\r\n    super(entityName, serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Generate unique id\r\n   * @returns number\r\n   */\r\n  private nid() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param id\r\n   * @returns\r\n   */\r\n  deleteItem(id: number) {\r\n    return this.removeOneFromCache(id);\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param item\r\n   * @returns\r\n   */\r\n  updateItem(item: T) {\r\n    return this.updateOneInCache(item);\r\n  }\r\n\r\n  /**\r\n   * @important Use this method!\r\n   * @param item\r\n   */\r\n  saveItem(item: T) {\r\n    this.add({ ...item, id: this.nid() });\r\n  }\r\n\r\n  queryItem(query: QueryObject) {\r\n    this.clearCache();\r\n    const q = excludeUndefined(query);\r\n    this.getWithQuery(q);\r\n  }\r\n\r\n  search(text: string) {\r\n    this.queryItem({ take: 20, search: text });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "EntityCollectionServiceBase"
            ],
            "type": "injectable"
        },
        {
            "name": "WeekDaysStrategy",
            "id": "injectable-WeekDaysStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WeekEndsStrategy",
            "id": "injectable-WeekEndsStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AutoCompleteService",
            "id": "class-AutoCompleteService-19385bf2293bb5ffe8f4394b13c7696a9f2d99f8e6180bf20d02eae51ad086f399a865b6bb536ab570eb366242779335c19fc3cc57410624de650fbc324bac44",
            "file": "libs/material/src/lib/form/autocomplete/autocomplete.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable, of } from 'rxjs';\r\n\r\nexport type AutocompleteOption = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport class AutoCompleteService {\r\n  data = [\r\n    { id: 1, name: 'First' },\r\n    { id: 2, name: 'Second' },\r\n    { id: 3, name: 'Third' },\r\n    { id: 4, name: 'Forth' },\r\n    { id: 5, name: 'Fifth' },\r\n  ];\r\n  getWithQuery(queryParams: {\r\n    search: string;\r\n  }): Observable<AutocompleteOption[]> {\r\n    return of(\r\n      this.data.filter((e) => {\r\n        if (queryParams.search) {\r\n          return e.name\r\n            .toLowerCase()\r\n            .includes(queryParams.search.toLowerCase());\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "[\r\n    { id: 1, name: 'First' },\r\n    { id: 2, name: 'Second' },\r\n    { id: 3, name: 'Third' },\r\n    { id: 4, name: 'Forth' },\r\n    { id: 5, name: 'Fifth' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "getWithQuery",
                    "args": [
                        {
                            "name": "queryParams",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AutocompleteOption[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "queryParams",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InputValueFilter",
            "id": "class-InputValueFilter-82201a1f93a66f9bb6d8fedd631edb716a65e87a4db51505fa6f160b64bf9cd78f1d2005385b0ab74a0f088080e912bee46ffdb0aa9ba18cc764987ada900ef0",
            "file": "libs/material/src/lib/api/providers/input-filter.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class InputValueFilter<V> {\r\n  filter(v: V): V | undefined {\r\n    return undefined;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "V | undefined",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockTableService",
            "id": "class-MockTableService-744df7303446e41ee3bcbf530328950cc4c98aa62e3be65ad6b3e9a7b3c09cf84ae14e1df520dd813269a802acf8841929637b608e48163449448c04d7e4b9eb",
            "file": "libs/material/src/lib/table/table.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {\r\n  applicationConfig,\r\n  moduleMetadata,\r\n  type Meta,\r\n  type StoryObj,\r\n} from '@storybook/angular';\r\nimport { TableComponent } from './table.component';\r\nimport { within } from '@storybook/testing-library';\r\nimport { expect } from '@storybook/jest';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {\r\n  LocalStoreService,\r\n  ResourceService,\r\n  provideAppName,\r\n  provideEntityName,\r\n  provideModuleName,\r\n  provideSearchControl,\r\n  provideTableColumns,\r\n} from '../api';\r\nimport { of } from 'rxjs';\r\n\r\nclass MockTableService {\r\n  entityName = 'Entity';\r\n  filteredEntities$ = of([\r\n    { id: 1, name: 'Name', description: 'Description' },\r\n    { id: 2, name: 'Name 2', description: 'Description' },\r\n    { id: 3, name: 'Name 3', description: 'Description' },\r\n    { id: 4, name: 'Name 4', description: 'Description' },\r\n    { id: 5, name: 'Name 5', description: 'Description' },\r\n    { id: 5, name: 'Name 5', description: 'Description' },\r\n  ]);\r\n\r\n  queryItem(query: any) {\r\n    return;\r\n  }\r\n\r\n  getAll() {}\r\n}\r\n\r\nconst meta: Meta<TableComponent> = {\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      providers: [\r\n        provideTableColumns([\r\n          { name: 'name', label: 'Name' },\r\n          { name: 'description', label: 'Description' },\r\n        ]),\r\n        provideSearchControl(),\r\n        LocalStoreService,\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockTableService,\r\n        },\r\n        provideEntityName('Entity'),\r\n        provideAppName('AppName'),\r\n        provideModuleName('ModuleName'),\r\n      ],\r\n    }),\r\n  ],\r\n};\r\nexport default meta;\r\ntype Story = StoryObj<TableComponent>;\r\n\r\nexport const Primary: Story = {\r\n  args: {},\r\n};\r\n\r\nexport const Heading: Story = {\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "entityName",
                    "defaultValue": "'Entity'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "filteredEntities$",
                    "defaultValue": "of([\r\n    { id: 1, name: 'Name', description: 'Description' },\r\n    { id: 2, name: 'Name 2', description: 'Description' },\r\n    { id: 3, name: 'Name 3', description: 'Description' },\r\n    { id: 4, name: 'Name 4', description: 'Description' },\r\n    { id: 5, name: 'Name 5', description: 'Description' },\r\n    { id: 5, name: 'Name 5', description: 'Description' },\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "queryItem",
                    "args": [
                        {
                            "name": "query",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NavItem",
            "id": "class-NavItem-f30201f981fe601ef5cafc0d613262163f83634105ce10d06ad32af1964ab18875948dab3aa333f6f0a540a7dd031992e50c4c22cd6f4c44e304e47b9a0271b7",
            "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Provider } from '@angular/core';\r\n\r\nexport const NAV_ITEMS_TOKEN = 'NAV_ITEMS_TOKEN';\r\n\r\nexport type NavItemParams = {\r\n  ignoreLastRoute?: boolean;\r\n};\r\n\r\nexport class NavItem {\r\n  route!: string;\r\n  name!: string;\r\n  icon!: string;\r\n  params?: NavItemParams;\r\n  position?: 'right' | 'left' | 'center';\r\n}\r\n\r\nexport function provideNavItems(navItems: NavItem[]): Provider {\r\n  return {\r\n    provide: NAV_ITEMS_TOKEN,\r\n    useValue: navItems,\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItemParams",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"right\" | \"left\" | \"center\"",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppLayoutComponent",
            "id": "component-AppLayoutComponent-5014dc4807270916db0ab9841a5c0fb14212df64e32caa6fbb44196c002ff4fe8f70f43f348e82e50ac246af52b9e98191e44db938defe145d0335950fc06182",
            "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-app-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "APP_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isHandset",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => {\n        this.isHandset = result.matches;\n        return this.isHandset;\n      }),\n      shareReplay()\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "lastRouteStoreKey",
                    "defaultValue": "`last_route`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "miniSidenav",
                    "defaultValue": "this.lss.get<boolean>(this.miniSideNavStoreKey, false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "miniSideNavStoreKey",
                    "defaultValue": "`mini_sidenav`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "moduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MODULE_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "navItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "NAV_ITEMS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "canPersistRoute",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "homePageClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navItemClickHandler",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMiniSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, ViewChild, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport {\n  APP_NAME_TOKEN,\n  LocalStoreService,\n  MODULE_NAME_TOKEN,\n  NAV_ITEMS_TOKEN,\n  NavItem,\n  NavItemParams,\n} from '../../api';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport '@angular/localize/init';\n@Component({\n  selector: 'wt-app-layout',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n  templateUrl: './app-layout.component.html',\n  styleUrl: './app-layout.component.scss',\n})\nexport class AppLayoutComponent {\n  protected readonly lastRouteStoreKey = `last_route`;\n  protected readonly miniSideNavStoreKey = `mini_sidenav`;\n\n  @ViewChild('drawer') drawer!: MatDrawer;\n\n  private breakpointObserver = inject(BreakpointObserver);\n  readonly title = inject(Title);\n\n  miniSidenav = this.lss.get<boolean>(this.miniSideNavStoreKey, false);\n\n  isHandset = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => {\n        this.isHandset = result.matches;\n        return this.isHandset;\n      }),\n      shareReplay()\n    );\n\n  constructor(\n    @Inject(NAV_ITEMS_TOKEN) public readonly navItems: NavItem[],\n    @Inject(APP_NAME_TOKEN) public readonly appName: string,\n    @Inject(MODULE_NAME_TOKEN) public readonly moduleName: string,\n    protected readonly lss: LocalStoreService,\n    protected readonly router: Router,\n    protected readonly route: ActivatedRoute\n  ) {}\n\n  ngAfterViewInit(): void {\n    const lastRoute = this.lss.get(this.lastRouteStoreKey);\n    const params: NavItemParams = this.route.snapshot\n      .queryParams as NavItemParams;\n    if (params.ignoreLastRoute) {\n      return;\n    } else if (lastRoute) {\n      this.router.navigate([lastRoute], { relativeTo: this.route });\n    }\n  }\n\n  async toggleMiniSidenav() {\n    this.miniSidenav = !this.miniSidenav;\n    this.lss.set(this.miniSideNavStoreKey, this.miniSidenav);\n    await this.drawer.close();\n    await this.drawer.open();\n  }\n\n  canPersistRoute(navItem: NavItem) {\n    return /[a-z-]{1,}/.test(navItem.route);\n  }\n\n  homePageClickHandler() {\n    this.lss.set(this.lastRouteStoreKey, '');\n  }\n\n  navItemClickHandler(navItem: NavItem) {\n    if (this.isHandset && !this.miniSidenav) this.drawer.close();\n\n    if (this.canPersistRoute(navItem)) {\n      this.lss.set(this.lastRouteStoreKey, navItem.route);\n    }\n  }\n}\n",
            "styleUrl": "./app-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    [class.mini-sidenav]=\"miniSidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <mat-toolbar>\r\n      <img src=\"./assets/icons/icon-72x72.png\" alt=\"App Logo\" width=\"30\" />\r\n    </mat-toolbar>\r\n\r\n    <mat-nav-list>\r\n      <a\r\n        mat-list-item\r\n        (click)=\"toggleMiniSidenav()\"\r\n        i18n-aria-label\r\n        aria-label=\"Minimize Sidenav\"\r\n        [matTooltip]=\"miniSidenav ? 'Maximize Sidenav' : 'Minimize Sidenav'\"\r\n        matTooltipPosition=\"right\"\r\n      >\r\n        <span matListItemIcon style=\"transform: rotate(90deg)\">\r\n          <mat-icon [class.big-icon]=\"miniSidenav\" class=\"outline\">\r\n            {{ miniSidenav ? 'unfold_more' : 'unfold_less' }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n\r\n      <!-- Nav Items -->\r\n      <a\r\n        mat-list-item\r\n        [routerLink]=\"[item.route]\"\r\n        [queryParams]=\"item.params\"\r\n        routerLinkActive=\"router-link-active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        matTooltip=\"{{ item.name | titlecase }}\"\r\n        matTooltipPosition=\"right\"\r\n        [matTooltipDisabled]=\"!miniSidenav\"\r\n        class=\"nav-item\"\r\n        (click)=\"navItemClickHandler(item)\"\r\n        i18n-aria-label\r\n        [attr.aria-label]=\"item.name + ' Page'\"\r\n        *ngFor=\"let item of navItems\"\r\n      >\r\n        <span matListItemLine>\r\n          {{ item.name | titlecase }}\r\n        </span>\r\n\r\n        <span matListItemIcon>\r\n          <mat-icon\r\n            [class.big-icon]=\"miniSidenav\"\r\n            color=\"primary\"\r\n            class=\"outline\"\r\n          >\r\n            {{ item.icon }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <div class=\"flex column flex-grow-1\" style=\"height: 100%\">\r\n      <mat-toolbar color=\"primary\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Toggle sidenav\"\r\n          mat-icon-button\r\n          (click)=\"drawer.toggle()\"\r\n        >\r\n          <mat-icon aria-label=\"Side nav toggle icon\" style=\"color: white;\">\r\n            {{ drawer.opened ? 'menu_open' : 'menu' }}\r\n          </mat-icon>\r\n        </button>\r\n        <span>{{ title.getTitle() }} | {{ moduleName }}</span>\r\n      </mat-toolbar>\r\n    \r\n      <router-outlet></router-outlet>\r\n      <div class=\"flex-grow-1\"></div>\r\n      <mat-toolbar>Toolbar </mat-toolbar>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-756632762478d221b0788b6533cc5e49b2524020347853dc38120285e7a9b8fe15405d6be6f51fff08f7925ea73e18bb68910fc9d90b577b2d7ce3fb1587ee6d",
            "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-autocomplete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./autocomplete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoCompleteService",
                    "defaultValue": "inject<AutoCompleteService>(AutoCompleteService, { optional: true }) ||\n    new AutoCompleteService()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "AutoCompleteService",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autoCompleteOptions$",
                    "defaultValue": "this.formControl.valueChanges.pipe(\n      debounceTime(400),\n      switchMap((search) => {\n        return this.autoCompleteService.getWithQuery({ search: search || '' });\n      })\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<AutocompleteOption[]> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "value",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatAutocompleteModule,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonInputComponent } from '../common-input.component';\nimport {\n  AutoCompleteService,\n  AutocompleteOption,\n} from './autocomplete.service';\nimport { Observable, debounceTime, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'wt-autocomplete',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n  ],\n  templateUrl: './autocomplete.component.html',\n  styleUrl: './autocomplete.component.scss',\n})\nexport class AutocompleteComponent\n  extends CommonInputComponent\n  implements OnInit\n{\n  formControl = new FormControl('');\n\n  @Input() autoCompleteService: AutoCompleteService =\n    inject<AutoCompleteService>(AutoCompleteService, { optional: true }) ||\n    new AutoCompleteService();\n\n  autoCompleteOptions$: Observable<AutocompleteOption[]> | undefined =\n    this.formControl.valueChanges.pipe(\n      debounceTime(400),\n      switchMap((search) => {\n        return this.autoCompleteService.getWithQuery({ search: search || '' });\n      })\n    );\n\n  constructor() {\n    super();\n  }\n  select(value: MatAutocompleteSelectedEvent) {\n    this.formControl.setValue(value.option.value.name);\n    this.control()?.setValue(value.option.value);\n    console.log(value.option.value);\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.formControl.setValue('');\n    }, 2000);\n  }\n}\n",
            "styleUrl": "./autocomplete.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 49
            },
            "extends": [
                "CommonInputComponent"
            ],
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n\n  <input\n    type=\"text\"\n    [formControlName]=\"name\"\n    style=\"visibility: collapse; position: absolute\"\n  />\n\n  <input\n    type=\"text\"\n    matInput\n    [formControl]=\"formControl\"\n    [matAutocomplete]=\"auto\"\n  />\n\n  <mat-autocomplete\n    autoActiveFirstOption\n    #auto=\"matAutocomplete\"\n    (optionSelected)=\"select($event)\"\n  >\n    @for (option of autoCompleteOptions$ | async;track option) {\n    <mat-option [value]=\"option\">\n      {{ option.name }}\n    </mat-option>\n    }\n  </mat-autocomplete>\n</mat-form-field>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-6f7588e072e87d47a3b475523120c60f388abca117f3de27b62a23fd012749c09250561759aadbfea41ffaf6d9da9106176f8df94dd7e8eb8af829f826675476",
            "file": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonInputComponent } from '../common-input.component';\n\n@Component({\n  selector: 'wt-checkbox',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatCheckboxModule],\n  templateUrl: './checkbox.component.html',\n  styleUrl: './checkbox.component.scss',\n})\nexport class CheckboxComponent extends CommonInputComponent {}\n",
            "styleUrl": "./checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-checkbox [formControlName]=\"name\">{{ label }}</mat-checkbox>\n</div>\n"
        },
        {
            "name": "CommonInputComponent",
            "id": "component-CommonInputComponent-f2773c8c2a43bc73dffa0affa9d2416346fbdd27b6b9ec486fdbdb21396a5247dc6229eb5ee9548a1c2a14a51164afdfec2e957bde8a398228705d54b2dd0143",
            "file": "libs/material/src/lib/form/common-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, inject } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { names } from '@webpackages/utils';\r\nimport { AutoCompleteService } from './autocomplete/autocomplete.service';\r\n\r\n@Component({ template: '' })\r\nexport class CommonInputComponent {\r\n  /**\r\n   * Upon form submit update the error message\r\n   */\r\n  @Input() errorMessage = 'Invalid input';\r\n\r\n  /**\r\n   * Input label\r\n   */\r\n  @Input() label = 'Input Label';\r\n\r\n  /**\r\n   * FormControlName\r\n   */\r\n  @Input() name = 'name';\r\n\r\n  /**\r\n   * Input icon\r\n   */\r\n  @Input() icon = 'info';\r\n\r\n  @Input() iconColor = 'primary';\r\n\r\n  /**\r\n   * Explain the constraints of input value\r\n   */\r\n  @Input() hint = '';\r\n\r\n  /**\r\n   * Select Options\r\n   */\r\n  @Input() options: string[] = ['First', 'Second', 'Third'];\r\n\r\n  @Input() multiple = false;\r\n\r\n  @Input() type: HTMLInputElement['type'] = 'text';\r\n  @Input() autocomplete: HTMLInputElement['autocomplete'] = 'off';\r\n\r\n  @Input() minLength = 0;\r\n  @Input() maxLength = 1000;\r\n  @Input() min = -99999999999;\r\n  @Input() max = 99999999999;\r\n  @Input() required = false;\r\n\r\n  @Input() autocompleteService?: AutoCompleteService;\r\n\r\n  @Input() public formGroup: FormGroup =\r\n    inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) });\r\n\r\n  control() {\r\n    return this.formGroup.get(this.name);\r\n  }\r\n  isInvalid() {\r\n    return this.control()?.invalid && this.control()?.touched;\r\n  }\r\n\r\n  getError() {\r\n    const errors = this.control()?.errors;\r\n\r\n    if (errors) {\r\n      const {\r\n        required,\r\n        minLength,\r\n        maxLength,\r\n        min,\r\n        max,\r\n        email,\r\n        error,\r\n        password,\r\n      } = errors;\r\n\r\n      const { readableName } = names(this.name);\r\n\r\n      if (required) return `${readableName} is required!`;\r\n      if (minLength)\r\n        return `${readableName} must be shorter than ${minLength} characters!`;\r\n      if (maxLength)\r\n        return `${readableName} must be longer than ${maxLength} characters!`;\r\n      if (min) return `${readableName} must be greater than ${min}!`;\r\n      if (max) return `${readableName} must be less than ${max}!`;\r\n      if (email) return `${readableName} must be a valid ${email}!`;\r\n\r\n      if (password) return password;\r\n      if (error) return error;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  getIconColor() {\r\n    return this.control()?.invalid && this.control()?.touched\r\n      ? 'red'\r\n      : this.iconColor;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-506abc84203bb17b4c72fa1cb2af90edffe24d21745879613d9196f0914dfe72ed4b3c737b1c971b75bd6b10f0474564b1e476c1baf19cfe3b08e1264bd2fa20",
            "file": "libs/material/src/lib/form/date/date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-date",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonInputComponent } from '../common-input.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@Component({\n  selector: 'wt-date',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatIconModule,\n  ],\n  templateUrl: './date.component.html',\n  styleUrl: './date.component.scss',\n})\nexport class DateComponent extends CommonInputComponent {}\n",
            "styleUrl": "./date.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <input matInput [formControlName]=\"name\" [matDatepicker]=\"picker\" />\n  <mat-hint>MM/DD/YYYY</mat-hint>\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n"
        },
        {
            "name": "DateTimeComponent",
            "id": "component-DateTimeComponent-03c38752aca9bff9ffaf581fd95bce2d89351a2cb60f6e071637a47195de4486741104698fa753e0b5b89c6e80bd2cd72dee9f4f5191f9ac97ff832dec751229",
            "file": "libs/material/src/lib/form/date-time/date-time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-date-time",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date-time.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonInputComponent } from '../common-input.component';\n\n@Component({\n  selector: 'wt-date-time',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatIconModule,\n  ],\n  templateUrl: './date-time.component.html',\n  styleUrl: './date-time.component.scss',\n})\nexport class DateTimeComponent extends CommonInputComponent {}\n",
            "styleUrl": "./date-time.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <input type=\"datetime-local\" matInput [formControlName]=\"name\" />\n  <mat-error>{{ getError() }}</mat-error>\n  <mat-hint>{{ hint }}</mat-hint>\n</mat-form-field>\n"
        },
        {
            "name": "EditorComponent",
            "id": "component-EditorComponent-697fdf1a361d7b0ace086ba46c9f75a22ac77e3f32e71aa394680002435d6eb5e21c4f72f0129bb6773ccde7907b43cc721486d45256bbe56c88abf04679be42",
            "file": "libs/material/src/lib/form/editor/editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'wt-editor',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './editor.component.html',\n  styleUrl: './editor.component.scss',\n})\nexport class EditorComponent {}\n",
            "styleUrl": "./editor.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>editor works!</p>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-03d2952160d0c0993bf86fa9d526eb45963171549cd5430507010275e09dc72a004a3f37d1dc2d9b3339f5267c5ff753d1298b0ea40d90c71abf5bb6e0a9162a",
            "file": "libs/material/src/lib/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "formGroup",
                    "defaultValue": "inject(FormGroup, { optional: true }) ||\n    new FormGroup({ name: new FormControl('') })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "submitLabel",
                    "defaultValue": "'Submit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitFormEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'wt-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  templateUrl: './form.component.html',\n  styleUrl: './form.component.scss',\n})\nexport class FormComponent {\n  @Output() submitFormEvent = new EventEmitter();\n\n  @Input() submitLabel = 'Submit';\n\n  @Input() formGroup: FormGroup =\n    inject(FormGroup, { optional: true }) ||\n    new FormGroup({ name: new FormControl('') });\n\n  submit() {\n    if (this.formGroup.valid) {\n      this.submitFormEvent.emit(this.formGroup.value);\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n  }\n}\n",
            "styleUrl": "./form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form class=\"flex column gap-2\" [formGroup]=\"formGroup\">\n  <ng-content></ng-content>\n\n  <div class=\"flex column gap-1\">\n    <button\n      class=\"grow-1\"\n      type=\"button\"\n      mat-raised-button\n      (click)=\"submit()\"\n      color=\"primary\"\n    >\n      {{ submitLabel }}\n    </button>\n    <button\n      class=\"grow-1\"\n      type=\"reset\"\n      mat-raised-button\n      (click)=\"reset()\"\n      i18n\n    >\n      Clear Form\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "FormInputComponent",
            "id": "component-FormInputComponent-b8128701a9edb5043f0102d55c0554a1f660c0a8e159335bde1376c8a9bc10c97c63f290a0c8791b0e67d6da6f95b74d39f7f11602d3075f31b751e182252fbe",
            "file": "libs/material/src/lib/form/form-input/form-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-form-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "componentType",
                    "defaultValue": "'text-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"text-input\" | \"autocomplete\" | \"checkbox\" | \"date\" | \"date-time\" | \"editor\" | \"radio\" | \"select\" | \"switch\" | \"text-input\" | \"textarea-input\"",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "AutocompleteComponent",
                    "type": "component"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "DateComponent",
                    "type": "component"
                },
                {
                    "name": "DateTimeComponent",
                    "type": "component"
                },
                {
                    "name": "EditorComponent",
                    "type": "component"
                },
                {
                    "name": "RadioComponent",
                    "type": "component"
                },
                {
                    "name": "SelectComponent",
                    "type": "component"
                },
                {
                    "name": "SwitchComponent",
                    "type": "component"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                },
                {
                    "name": "TextareaInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { CheckboxComponent } from '../checkbox/checkbox.component';\nimport { DateComponent } from '../date/date.component';\nimport { DateTimeComponent } from '../date-time/date-time.component';\nimport { EditorComponent } from '../editor/editor.component';\nimport { RadioComponent } from '../radio/radio.component';\nimport { SelectComponent } from '../select/select.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { TextInputComponent } from '../text-input/text-input.component';\nimport { TextareaInputComponent } from '../textarea-input/textarea-input.component';\nimport { CommonInputComponent } from '../common-input.component';\n\n@Component({\n  selector: 'wt-form-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AutocompleteComponent,\n    CheckboxComponent,\n    DateComponent,\n    DateTimeComponent,\n    EditorComponent,\n    RadioComponent,\n    SelectComponent,\n    SwitchComponent,\n    TextInputComponent,\n    TextareaInputComponent,\n  ],\n  templateUrl: './form-input.component.html',\n  styleUrl: './form-input.component.scss',\n})\nexport class FormInputComponent extends CommonInputComponent {\n  @Input() componentType:\n    | 'text-input'\n    | 'autocomplete'\n    | 'checkbox'\n    | 'date'\n    | 'date-time'\n    | 'editor'\n    | 'radio'\n    | 'select'\n    | 'switch'\n    | 'text-input'\n    | 'textarea-input' = 'text-input';\n}\n",
            "styleUrl": "./form-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<wt-text-input\n  *ngIf=\"componentType === 'text-input'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n  [type]=\"type\"\n  [minLength]=\"minLength\"\n  [maxLength]=\"maxLength\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [required]=\"required\"\n></wt-text-input>\n\n<wt-textarea-input\n  *ngIf=\"componentType === 'textarea-input'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n  [type]=\"type\"\n  [minLength]=\"minLength\"\n  [maxLength]=\"maxLength\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [required]=\"required\"\n></wt-textarea-input>\n\n<wt-autocomplete\n  *ngIf=\"componentType === 'autocomplete'\"\n  [formGroup]=\"formGroup\"\n  [autocompleteService]=\"autocompleteService\"\n></wt-autocomplete>\n\n<wt-checkbox\n  [formGroup]=\"formGroup\"\n  *ngIf=\"componentType === 'checkbox'\"\n  [name]=\"name\"\n></wt-checkbox>\n\n<wt-radio\n  *ngIf=\"componentType === 'radio'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n  [options]=\"options\"\n></wt-radio>\n\n<wt-date\n  *ngIf=\"componentType === 'date'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n></wt-date>\n\n<wt-date-time\n  *ngIf=\"componentType === 'date-time'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n></wt-date-time>\n\n<wt-select\n  *ngIf=\"componentType === 'select'\"\n  [formGroup]=\"formGroup\"\n  [name]=\"name\"\n></wt-select>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-ec5a62613251508f1514b3743512fb0eb25bcc9538644907620f6a7328c5a50b8bd341b52d82e324d5c892d7a8138ab85732a41437588e5124c4d39845c4780c",
            "file": "libs/material/src/lib/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotPasswordEvent",
                    "defaultValue": "new EventEmitter<\n    Pick<LoginData, 'username'>\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAfter forgot-password button is clicked, if the username is valid, then emit username object\n",
                    "description": "<p>After forgot-password button is clicked, if the username is valid, then emit username object</p>\n",
                    "line": 53,
                    "type": "EventEmitter"
                },
                {
                    "name": "loginEvent",
                    "defaultValue": "new EventEmitter<LoginData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAfter login button is clicked, if the form is valid, then emit form value\n",
                    "description": "<p>After login button is clicked, if the form is valid, then emit form value</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "defaultValue": "loginFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "forgotPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputComponent } from '../../form/text-input/text-input.component';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport type LoginData = {\n  username: string;\n  password: string;\n};\n\nconst loginFormGroup = new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n});\n\n@Component({\n  selector: 'wt-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    TextInputComponent,\n  ],\n\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent {\n  formGroup = loginFormGroup;\n\n  /**\n   * After login button is clicked, if the form is valid, then emit form value\n   */\n  @Output() loginEvent = new EventEmitter<LoginData>();\n\n  /**\n   * After forgot-password button is clicked, if the username is valid, then emit username object\n   */\n  @Output() forgotPasswordEvent = new EventEmitter<\n    Pick<LoginData, 'username'>\n  >();\n\n  submit() {\n    if (this.formGroup.valid) {\n      const { username, password } = this.formGroup.value;\n      if (username && password) {\n        this.loginEvent.emit({ username, password });\n      }\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n  }\n\n  forgotPassword() {\n    const usernameControl = this.formGroup.get('username');\n\n    if (usernameControl?.valid && usernameControl.value) {\n      const username = usernameControl.value;\n      this.forgotPasswordEvent.emit({ username });\n    } else {\n      usernameControl?.setErrors({ error: `username is not a valid email!` });\n    }\n  }\n}\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form class=\"flex column gap-1\" [formGroup]=\"formGroup\">\n  <wt-text-input\n    [formGroup]=\"formGroup\"\n    name=\"username\"\n    type=\"email\"\n    autocomplete=\"email\"\n    label=\"Username\"\n  ></wt-text-input>\n  <wt-text-input\n    [formGroup]=\"formGroup\"\n    name=\"password\"\n    type=\"password\"\n    autocomplete=\"current-password\"\n    label=\"password\"\n  ></wt-text-input>\n\n  <div class=\"flex column gap-1\">\n    <div class=\"flex row gap-1\">\n      <button\n        class=\"grow-1\"\n        type=\"button\"\n        mat-raised-button\n        (click)=\"submit()\"\n        color=\"primary\"\n        i18n\n      >\n        Login\n      </button>\n      <button class=\"grow-1\" type=\"reset\" mat-raised-button (click)=\"reset()\">\n        Clear Form\n      </button>\n    </div>\n    <div class=\"flex gap-1\">\n      <button\n        class=\"grow-1\"\n        type=\"button\"\n        mat-flat-button\n        color=\"accent\"\n        (click)=\"forgotPassword()\"\n        i18n\n      >\n        Forgot Password\n      </button>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "MobileLayoutComponent",
            "id": "component-MobileLayoutComponent-329e862399d4266f6b8ff04a89d3a9cbd98ad9baf18127b7e0ce56da6baba026bf7e840683c23e463e46de897d1bd378ce7a40174d975d81acfc86d95ca032dd",
            "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-mobile-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./mobile-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'wt-mobile-layout',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './mobile-layout.component.html',\n  styleUrl: './mobile-layout.component.scss',\n})\nexport class MobileLayoutComponent {}\n",
            "styleUrl": "./mobile-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>mobile-layout works!</p>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-69fc2b92f176438d1b1796e6c1040083f90572240faee8e49d968a787dfbddba4413480208b3172b56216bd4733bb6ee7f2cb1a9b28eebc54d8f8bedb377fafc",
            "file": "libs/material/src/lib/form/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonInputComponent } from '../common-input.component';\n@Component({\n  selector: 'wt-radio',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    MatIconModule,\n  ],\n  templateUrl: './radio.component.html',\n  styleUrl: './radio.component.scss',\n})\nexport class RadioComponent extends CommonInputComponent {}\n",
            "styleUrl": "./radio.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <label>{{ label }}</label>\n  <mat-radio-group\n    class=\"flex column\"\n    [formGroupName]=\"name\"\n    style=\"margin-top: 1em\"\n  >\n    @for (option of options; track option) {\n    <mat-radio-button class=\"example-radio-button\" [value]=\"option\">\n      {{ option }}\n    </mat-radio-button>\n    }\n  </mat-radio-group>\n</div>\n"
        },
        {
            "name": "ResetPasswordComponent",
            "id": "component-ResetPasswordComponent-8d3c68b3bef22d3364edb2753a077322845cbe11011fe5246e5bd87dc29f5b2d6421a133315be49e2b0e9f7cb0da86cc1735d0185f5205b9e2dd388c4770332c",
            "file": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-reset-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./reset-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "resetPasswordEvent",
                    "defaultValue": "new EventEmitter<ResetPasswordData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAfter login button is clicked, if the form is valid, then emit form value\n",
                    "description": "<p>After login button is clicked, if the form is valid, then emit form value</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "defaultValue": "resetPasswordForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TextInputComponent } from '../../form/text-input/text-input.component';\nimport { PasswordValidator } from '../../api';\n\nexport type ResetPasswordData = {\n  username: string;\n  password: string;\n  newPassword: string;\n  confirmPassword: string;\n};\n\nexport const resetPasswordForm = new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl(''),\n  newPassword: new FormControl('', [PasswordValidator]),\n  confirmPassword: new FormControl('', [PasswordValidator]),\n});\n\n@Component({\n  selector: 'wt-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    TextInputComponent,\n  ],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent {\n  formGroup = resetPasswordForm;\n\n  /**\n   * After login button is clicked, if the form is valid, then emit form value\n   */\n  @Output() resetPasswordEvent = new EventEmitter<ResetPasswordData>();\n\n  submit() {\n    this.formGroup.markAsDirty({ onlySelf: false });\n    if (this.formGroup.valid) {\n      const { username, password, confirmPassword, newPassword } =\n        this.formGroup.value;\n      if (username && password && newPassword && confirmPassword) {\n        this.resetPasswordEvent.emit({\n          username,\n          password,\n          newPassword,\n          confirmPassword,\n        });\n      }\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n  }\n}\n",
            "styleUrl": "./reset-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form class=\"flex column gap-1\" [formGroup]=\"formGroup\">\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"username\"\n    type=\"email\"\n    autocomplete=\"email\"\n    label=\"Username\"\n    icon=\"email\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"password\"\n    type=\"password\"\n    autocomplete=\"current-password\"\n    label=\"current password\"\n    icon=\"password\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"newPassword\"\n    type=\"password\"\n    label=\"new password\"\n    autocomplete=\"new-password\"\n    icon=\"password\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"confirmPassword\"\n    type=\"password\"\n    label=\"confirm password\"\n    autocomplete=\"new-password\"\n    icon=\"password\"\n  ></wt-text-input>\n\n  <div class=\"flex column gap-1\">\n    <button\n      class=\"grow-1\"\n      type=\"button\"\n      mat-raised-button\n      (click)=\"submit()\"\n      color=\"primary\"\n      i18n\n    >\n      Reset Password\n    </button>\n    <button\n      class=\"grow-1\"\n      type=\"reset\"\n      mat-raised-button\n      (click)=\"reset()\"\n      i18n\n    >\n      Clear Form\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ResetPasswordWithCodeComponent",
            "id": "component-ResetPasswordWithCodeComponent-504755425632a5c781e95d153fb6e26054e17cc229a656c3174e81a80c1bcb904fb057afda8525308931f12691d730519c80fc663e27f0427b26370be4c8ab4f",
            "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-reset-password-with-code",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./reset-password-with-code.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "resetPasswordWithCodeEvent",
                    "defaultValue": "new EventEmitter<ResetPasswordWithCodeData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "defaultValue": "resetPasswordWithCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TextInputComponent } from '../../form/text-input/text-input.component';\nimport { PasswordValidator } from '../../api';\n\nexport type ResetPasswordWithCodeData = {\n  username: string;\n  securityCode: string;\n  newPassword: string;\n  confirmPassword: string;\n};\n\nexport const resetPasswordWithCode = new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  securityCode: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n  newPassword: new FormControl('', [Validators.required, PasswordValidator]),\n  confirmPassword: new FormControl('', [\n    Validators.required,\n    PasswordValidator,\n  ]),\n});\n\n@Component({\n  selector: 'wt-reset-password-with-code',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    TextInputComponent,\n  ],\n  templateUrl: './reset-password-with-code.component.html',\n  styleUrl: './reset-password-with-code.component.scss',\n})\nexport class ResetPasswordWithCodeComponent {\n  formGroup = resetPasswordWithCode;\n\n  @Output() resetPasswordWithCodeEvent =\n    new EventEmitter<ResetPasswordWithCodeData>();\n\n  submit() {\n    for (const c of Object.values(this.formGroup.controls)) {\n      c.markAsTouched();\n      c.markAsDirty();\n    }\n    if (this.formGroup.valid) {\n      const { username, securityCode, confirmPassword, newPassword } =\n        this.formGroup.value;\n      if (username && securityCode && confirmPassword && newPassword) {\n        this.resetPasswordWithCodeEvent.emit({\n          username,\n          securityCode,\n          newPassword,\n          confirmPassword,\n        });\n      }\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n  }\n}\n",
            "styleUrl": "./reset-password-with-code.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form class=\"flex column gap-1\" [formGroup]=\"formGroup\">\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"username\"\n    type=\"email\"\n    autocomplete=\"email\"\n    label=\"Username\"\n    icon=\"email\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"securityCode\"\n    type=\"text\"\n    autocomplete=\"off\"\n    label=\"Security Code\"\n    icon=\"security\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"newPassword\"\n    type=\"password\"\n    label=\"new password\"\n    autocomplete=\"new-password\"\n    icon=\"password\"\n  ></wt-text-input>\n\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"confirmPassword\"\n    type=\"password\"\n    label=\"confirm password\"\n    autocomplete=\"new-password\"\n    icon=\"password\"\n  ></wt-text-input>\n\n  <div class=\"flex column gap-1\">\n    <button\n      class=\"grow-1\"\n      type=\"button\"\n      mat-raised-button\n      (click)=\"submit()\"\n      color=\"primary\"\n      i18n\n    >\n      Reset Password\n    </button>\n    <button\n      class=\"grow-1\"\n      type=\"reset\"\n      mat-raised-button\n      (click)=\"reset()\"\n      i18n\n    >\n      Clear Form\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SampleFormComponent",
            "id": "component-SampleFormComponent-b00ce0a3af26cc9da4c8e3f51dd7b686f2af75170f0a1579d51f05a716bdf5cde58c0ca745a51c7a5d4d9f5d379e30439d6d60ec5359c9e69ff6ff746a7443c8",
            "file": "libs/material/src/lib/form/sample-form/sample-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-sample-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sample-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "formSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nForm submit event\n",
                    "description": "<p>Form submit event</p>\n",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "['Cat 1', 'Cat 2']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new FormGroup({\n    name: new FormControl(''),\n    category: new FormControl(''),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "submit",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormComponent",
                    "type": "component"
                },
                {
                    "name": "FormInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormComponent } from '../form.component';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'wt-sample-form',\n  standalone: true,\n  imports: [CommonModule, FormComponent, FormInputComponent],\n  templateUrl: './sample-form.component.html',\n  styleUrl: './sample-form.component.scss',\n})\nexport class SampleFormComponent {\n  /**\n   * Form submit event\n   */\n  @Output() formSubmit = new EventEmitter();\n  \n  formGroup = new FormGroup({\n    name: new FormControl(''),\n    category: new FormControl(''),\n  });\n\n  categories = ['Cat 1', 'Cat 2'];\n\n  submit(event: any) {\n    this.formSubmit.emit(event);\n  }\n}\n",
            "styleUrl": "./sample-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<wt-form [formGroup]=\"formGroup\" (submitFormEvent)=\"submit($event)\">\n  <wt-form-input\n    [formGroup]=\"formGroup\"\n    componentType=\"text-input\"\n    name=\"name\"\n  ></wt-form-input>\n  <wt-form-input\n    [formGroup]=\"formGroup\"\n    componentType=\"select\"\n    name=\"category\"\n    [options]=\"categories\"\n  ></wt-form-input>\n</wt-form>\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-080cae2562e32152503681843a45f92f058ea92b83f65bdf14e7f8ae60b972cebcedc4cabedbaacd123b40be110268d04940fb8e5c38ece9b26b40d9c55092a3",
            "file": "libs/material/src/lib/form/select/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSelectModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonInputComponent } from '../common-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'wt-select',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatSelectModule,\n  ],\n  templateUrl: './select.component.html',\n  styleUrl: './select.component.scss',\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class SelectComponent extends CommonInputComponent {\n\n  \n}\n",
            "styleUrl": "./select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControlName]=\"name\" [multiple]=\"multiple\">\n    @for (option of options; track options) {\n    <mat-option [value]=\"option\">{{ option }}</mat-option>\n    }\n  </mat-select>\n  <mat-icon matPrefix color=\"primary\" [attr.color]=\"getIconColor()\">{{ icon }}</mat-icon>\n  <mat-error>{{ getError() }}</mat-error>\n</mat-form-field>\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-58081f4e92089842ce076fad13942cf98005454109f52906fbff272f8047dfbabe1c8af1771f2041dd0ee2da813d94b217e63ac6a48af91a0697e1ea393781bf",
            "file": "libs/material/src/lib/auth/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-signup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "signupEvent",
                    "defaultValue": "new EventEmitter<SignupData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAfter login button is clicked, if the form is valid, then emit form value\n",
                    "description": "<p>After login button is clicked, if the form is valid, then emit form value</p>\n",
                    "line": 45,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "defaultValue": "signupFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TextInputComponent } from '../../form/text-input/text-input.component';\nimport { PasswordValidator } from '../../api';\n\nexport type SignupData = {\n  username: string;\n  password: string;\n};\n\nconst signupFormGroup = new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [PasswordValidator]),\n});\n\n@Component({\n  selector: 'wt-signup',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    TextInputComponent,\n  ],\n  templateUrl: './signup.component.html',\n  styleUrl: './signup.component.scss',\n})\nexport class SignupComponent {\n  formGroup = signupFormGroup;\n\n  /**\n   * After login button is clicked, if the form is valid, then emit form value\n   */\n  @Output() signupEvent = new EventEmitter<SignupData>();\n\n  submit() {\n    if (this.formGroup.valid) {\n      const { username, password } = this.formGroup.value;\n      if (username && password) {\n        this.signupEvent.emit({ username, password });\n      }\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n  }\n}\n",
            "styleUrl": "./signup.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form class=\"flex column gap-1\" [formGroup]=\"formGroup\">\n  <wt-text-input\n    i18n-label\n    [formGroup]=\"formGroup\"\n    name=\"username\"\n    type=\"email\"\n    autocomplete=\"off\"\n    label=\"Username\"\n  ></wt-text-input>\n  <wt-text-input\n    [formGroup]=\"formGroup\"\n    name=\"password\"\n    type=\"password\"\n    autocomplete=\"new-password\"\n    label=\"password\"\n    i18n-label\n  ></wt-text-input>\n\n  <div class=\"flex column gap-1\">\n    <button\n      class=\"grow-1\"\n      type=\"button\"\n      mat-raised-button\n      (click)=\"submit()\"\n      color=\"primary\"\n      i18n\n    >\n      Signup\n    </button>\n    <button\n      class=\"grow-1\"\n      type=\"reset\"\n      mat-raised-button\n      (click)=\"reset()\"\n      i18n\n    >\n      Clear Form\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SwitchComponent",
            "id": "component-SwitchComponent-65eff2a1d09720f67476d3b5064fec164fba47eca26f889e96f14a793f3c26984f292cb79f21de628697c90fbbbeb0835aca442e7a99b835188c60caaa33048e",
            "file": "libs/material/src/lib/form/switch/switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonInputComponent } from '../common-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@Component({\n  selector: 'wt-switch',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n  ],\n  templateUrl: './switch.component.html',\n  styleUrl: './switch.component.scss',\n})\nexport class SwitchComponent extends CommonInputComponent {}\n",
            "styleUrl": "./switch.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-slide-toggle [formControlName]=\"name\">{{ label }}</mat-slide-toggle>\n</div>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-025e127048ae5411649db8494efac2955ae6ea86d0771529650132ae7108883b198529071af558c4abc28438329eb404d9d9989275aff368eca488bd98711adb",
            "file": "libs/material/src/lib/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-table",
            "styleUrls": [
                "./table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "this.lss.get<string>('active') || 'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "count$",
                    "defaultValue": "delayObservable(\r\n    this.service.allCount$,\r\n    3000\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "data$",
                    "defaultValue": "delayObservable(\r\n    this.service.filteredEntities$,\r\n    2000\r\n  ).pipe(\r\n    map((data) => {\r\n      this.data = [];\r\n      let i = 0;\r\n      for (const d of data) {\r\n        setTimeout(() => {\r\n          this.data = [...this.data, d];\r\n        }, i * 50);\r\n        i++;\r\n      }\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "direction",
                    "defaultValue": "this.lss.get<SortDirection>('direction') || 'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortDirection",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "entityName",
                    "defaultValue": "this.service.entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "matPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "matSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "this.lss.get<number>('pageIndex') || 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "pageSize",
                    "defaultValue": "this.lss.get<number>('pageSize') || 20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "searchControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "SEARCH_CONTROL_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "tableEvents$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "visibleColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 86
                }
            ],
            "methodsClass": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareQuery",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryObject",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\r\nimport { MatSortModule, MatSort, SortDirection } from '@angular/material/sort';\r\nimport { Observable, debounceTime, map, merge, tap } from 'rxjs';\r\nimport {\r\n  LocalStoreService,\r\n  QueryObject,\r\n  ResourceService,\r\n  SEARCH_CONTROL_TOKEN,\r\n  TABLE_COLUMNS_TOKEN,\r\n  TableColumn,\r\n  delayObservable,\r\n} from '../api';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { slideInRightOnEnterAnimation } from 'angular-animations';\r\nimport '@angular/localize/init';\r\n\r\n@Component({\r\n  selector: 'wt-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n  ],\r\n  animations: [\r\n    slideInRightOnEnterAnimation({ anchor: 'enter', duration: 200 }),\r\n  ],\r\n})\r\nexport class TableComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild(MatPaginator) matPage!: MatPaginator;\r\n  @ViewChild(MatSort) matSort!: MatSort;\r\n\r\n  readonly entityName = this.service.entityName;\r\n  readonly count$: Observable<number> = delayObservable(\r\n    this.service.allCount$,\r\n    3000\r\n  );\r\n\r\n  data: any[] = [];\r\n\r\n  readonly data$: Observable<any> = delayObservable(\r\n    this.service.filteredEntities$,\r\n    2000\r\n  ).pipe(\r\n    map((data) => {\r\n      this.data = [];\r\n      let i = 0;\r\n      for (const d of data) {\r\n        setTimeout(() => {\r\n          this.data = [...this.data, d];\r\n        }, i * 50);\r\n        i++;\r\n      }\r\n    })\r\n  );\r\n\r\n  tableEvents$!: Observable<void>;\r\n\r\n  columns!: string[];\r\n  displayedColumns!: string[];\r\n  visibleColumns!: TableColumn[];\r\n\r\n  pageSize = this.lss.get<number>('pageSize') || 20;\r\n  pageIndex = this.lss.get<number>('pageIndex') || 0;\r\n  active = this.lss.get<string>('active') || 'id';\r\n  direction: SortDirection = this.lss.get<SortDirection>('direction') || 'asc';\r\n\r\n  constructor(\r\n    private readonly service: ResourceService<any>,\r\n    private readonly lss: LocalStoreService,\r\n    @Inject(TABLE_COLUMNS_TOKEN)\r\n    private readonly tableColumns: TableColumn[],\r\n    @Inject(SEARCH_CONTROL_TOKEN)\r\n    public readonly searchControl: FormControl\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const dColumns = this.lss.get<TableColumn[]>('visibleColumns');\r\n    this.columns = this.tableColumns.map((e) => e.name);\r\n    if (dColumns) {\r\n      this.visibleColumns = [...dColumns];\r\n      this.displayedColumns = this.visibleColumns.map((e) => e.name);\r\n    } else {\r\n      this.visibleColumns = [...this.tableColumns];\r\n      this.displayedColumns = [...this.columns];\r\n    }\r\n\r\n    this.columns.unshift('id');\r\n    this.displayedColumns.unshift('id');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.tableEvents$ = merge(\r\n      this.matPage.page,\r\n      this.matSort.sortChange,\r\n      this.searchControl.valueChanges.pipe(\r\n        tap((e) => {\r\n          this.matPage.firstPage();\r\n        })\r\n      )\r\n    ).pipe(\r\n      debounceTime(600),\r\n      tap((value) => {\r\n        this.getAll();\r\n      }),\r\n      map((value: any) => {\r\n        return value;\r\n      })\r\n    );\r\n\r\n    this.getAll();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Save page config\r\n    const pageIndex = this.matPage.pageIndex;\r\n    const pageSize = this.matPage.pageSize;\r\n    this.lss.set('pageIndex', pageIndex);\r\n    this.lss.set('pageSize', pageSize);\r\n\r\n    // Save sort config\r\n    const direction = this.matSort.direction;\r\n    const active = this.matSort.active;\r\n    this.lss.set('direction', direction);\r\n    this.lss.set('active', active);\r\n  }\r\n\r\n  getAll() {\r\n    this.service.queryItem(this.prepareQuery());\r\n  }\r\n\r\n  private prepareQuery(): QueryObject {\r\n    return {\r\n      take: this.matPage.pageSize,\r\n      skip: this.matPage.pageIndex * this.matPage.pageSize,\r\n      orderBy: this.matSort.active,\r\n      orderDir: this.matSort.direction,\r\n      search: this.searchControl.value || undefined,\r\n      withDeleted: false,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n\r\ntable{ \r\n  overflow: hidden;\r\n}\r\n\r\n.table-th{ \r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  gap: 1em;\r\n}\r\n",
                    "styleUrl": "./table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 91,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<ng-container *ngIf=\"tableEvents$ | async\"></ng-container>\r\n<ng-container *ngIf=\"data$ | async\"></ng-container>\r\n\r\n<div>\r\n  <mat-form-field\r\n    style=\"\r\n      position: sticky;\r\n      top: 0px;\r\n      z-index: 1;\r\n      width: 100%;\r\n      cursor: pointer;\r\n      letter-spacing: 1px;\r\n    \"\r\n  >\r\n    <mat-label i18n>Search {{ entityName }}</mat-label>\r\n    <input\r\n      matInput\r\n      type=\"search\"\r\n      autocomplete=\"off\"\r\n      [formControl]=\"searchControl\"\r\n    />\r\n    <mat-icon matPrefix color=\"primary\">search</mat-icon>\r\n  </mat-form-field>\r\n  <table\r\n    mat-table\r\n    [dataSource]=\"data\"\r\n    class=\"full-width-table\"\r\n    matSort\r\n    aria-label=\"Elements\"\r\n    [matSortActive]=\"active\"\r\n    [matSortDirection]=\"direction\"\r\n  >\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container [matColumnDef]=\"col.name\" *ngFor=\"let col of visibleColumns\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n        <div class=\"table-th\">\r\n          <mat-icon color=\"primary\">{{ col.icon }}</mat-icon>\r\n          <span>{{ col.label }}</span>\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row[col.name] }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" [@enter]></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [pageSize]=\"pageSize\"\r\n    [pageIndex]=\"pageIndex\"\r\n    [length]=\"count$ | async\"\r\n    [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\r\n    [showFirstLastButtons]=\"true\"\r\n    aria-label=\"Select page\"\r\n    style=\"position: sticky; bottom: 0px\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "TextareaInputComponent",
            "id": "component-TextareaInputComponent-010ba8d3c0063379152aeb9bd71d09ef2b727e33980a4a587ae901884647e738c48b2fe82614c921e820940678e2a7c6ad976d7246ff6dd844418d06aec4ae35",
            "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-textarea-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./textarea-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonInputComponent } from '../common-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'wt-textarea-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  templateUrl: './textarea-input.component.html',\n  styleUrl: './textarea-input.component.scss',\n})\nexport class TextareaInputComponent extends CommonInputComponent {}\n",
            "styleUrl": "./textarea-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label | titlecase }}</mat-label>\n  <textarea matInput [formControlName]=\"name\"></textarea>\n  <mat-icon matPrefix [color]=\"iconColor\" [attr.color]=\"getIconColor()\">\n    {{ icon }}\n  </mat-icon>\n  <mat-error>{{ getError() }}</mat-error>\n  <mat-hint>{{ hint }}</mat-hint>\n</mat-form-field>\n"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-0a767762df60eb9037beb3572b9076431536f535fb6c7275a069204ce6959f83595d3416ee1bcf5b1932717c73cf9b1235e225e2ddb9fd0352470873ca65bf27",
            "file": "libs/material/src/lib/form/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-text-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocompleteService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "AutoCompleteService",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Invalid input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpon form submit update the error message\n",
                    "description": "<p>Upon form submit update the error message</p>\n",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "defaultValue": "inject<FormGroup>(FormGroup, { optional: true }) ||\r\n    new FormGroup({ name: new FormControl('', []) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExplain the constraints of input value\n",
                    "description": "<p>Explain the constraints of input value</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput icon\n",
                    "description": "<p>Input icon</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInput label\n",
                    "description": "<p>Input label</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "maxLength",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "min",
                    "defaultValue": "-99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "minLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormControlName\n",
                    "description": "<p>FormControlName</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "defaultValue": "['First', 'Second', 'Third']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelect Options\n",
                    "description": "<p>Select Options</p>\n",
                    "line": 38,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "getIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonInputComponent } from '../common-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'wt-text-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  templateUrl: './text-input.component.html',\n  styleUrl: './text-input.component.scss',\n})\nexport class TextInputComponent extends CommonInputComponent {}\n",
            "styleUrl": "./text-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonInputComponent"
            ],
            "templateData": "<mat-form-field [formGroup]=\"formGroup\" appearance=\"outline\">\n  <mat-label>{{ label | titlecase }}</mat-label>\n  <input\n    [type]=\"type\"\n    [formControlName]=\"name\"\n    matInput\n    [autocomplete]=\"autocomplete\"\n    [minLength]=\"minLength\"\n    [maxLength]=\"maxLength\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [required]=\"required\"\n  />\n  <mat-icon\n    matPrefix\n    class=\"fill\"\n    color=\"primary\"\n    [attr.color]=\"getIconColor()\"\n  >\n    {{ icon }}\n  </mat-icon>\n  <mat-hint>{{ hint }}</mat-hint>\n  <mat-error>{{ getError() }}</mat-error>\n</mat-form-field>\n"
        },
        {
            "name": "WebLayoutComponent",
            "id": "component-WebLayoutComponent-faf921836d6c086eea06d16acbea9b6956db822f2fcebd5a0ed6eabf206bccb002bd4a3d6764d96df52223796eae8bbe9a56c8a7fff42a907e4ca2a218e212ad",
            "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wt-web-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./web-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navitems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "NAV_ITEMS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NAV_ITEMS_TOKEN, NavItem } from '../../api';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n@Component({\n  selector: 'wt-web-layout',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  templateUrl: './web-layout.component.html',\n  styleUrl: './web-layout.component.scss',\n})\nexport class WebLayoutComponent {\n  constructor(@Inject(NAV_ITEMS_TOKEN) public readonly navitems: NavItem[]) {}\n}\n",
            "styleUrl": "./web-layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navitems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "navitems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-toolbar color=\"primary\">\n  <div class=\"flex grow-1 justify-left\">\n    <img\n      src=\"./assets/icons/icon-72x72.png\"\n      alt=\"App Logo\"\n      width=\"32\"\n      height=\"32\"\n    />\n  </div>\n\n  <div class=\"flex grow-1 justify-center\">\n    <button\n      *ngFor=\"let item of navitems\"\n      mat-icon-button\n      [routerLink]=\"[item.route]\"\n      routerLinkActive=\"router-link-active\"\n      [matTooltip]=\"item.name\"\n      matTooltipPosition=\"below\"\n    >\n      <mat-icon>{{ item.icon }}</mat-icon>\n    </button>\n  </div>\n\n  <div class=\"flex grow-1 justify-right\">\n    <button\n      mat-icon-button\n      routerLinkActive=\"router-link-active\"\n      matTooltipPosition=\"below\"\n      [matMenuTriggerFor]=\"menu\"\n    >\n      <mat-icon>person</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button\n        mat-menu-item\n        [routerLink]=\"['login']\"\n        routerLinkActive=\"router-link-active\"\n      >\n        <mat-icon>login</mat-icon>\n        <span> Login </span>\n      </button>\n      <button\n        mat-menu-item\n        [routerLink]=\"['logout']\"\n        routerLinkActive=\"router-link-active\"\n      >\n        <mat-icon>logout</mat-icon>\n        <span> Logout </span>\n      </button>\n      <mat-divider></mat-divider>\n      <button\n        mat-menu-item\n        [routerLink]=\"['profile']\"\n        routerLinkActive=\"router-link-active\"\n      >\n        <mat-icon>person</mat-icon>\n        <span> Profile </span>\n      </button>\n      <button\n        mat-menu-item\n        [routerLink]=\"['settings']\"\n        routerLinkActive=\"router-link-active\"\n      >\n        <mat-icon>settings</mat-icon>\n        <span> Settings </span>\n      </button>\n    </mat-menu>\n  </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'APP_NAME_TOKEN'",
                "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
            },
            {
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
            },
            {
                "name": "ENTITY_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ENTITY_NAME_TOKEN'"
            },
            {
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
            },
            {
                "name": "FORM_FIELDS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELDS_TOKEN'",
                "rawdescription": "Inject list of FormFields",
                "description": "<p>Inject list of FormFields</p>\n"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/login works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/reset-password works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/reset-password-with-code works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/signup works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/autocomplete works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/editor works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    componentType: 'text-input',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/textarea-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-layout works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/mobile-layout works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/web-layout works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "loginFormGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/login/login.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n})"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      providers: [\r\n        provideTableColumns([\r\n          { name: 'name', label: 'Name' },\r\n          { name: 'description', label: 'Description' },\r\n        ]),\r\n        provideSearchControl(),\r\n        LocalStoreService,\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockTableService,\r\n        },\r\n        provideEntityName('Entity'),\r\n        provideAppName('AppName'),\r\n        provideModuleName('ModuleName'),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoginComponent>",
                "defaultValue": "{\n  component: LoginComponent,\n  title: 'LoginComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ResetPasswordComponent>",
                "defaultValue": "{\n  component: ResetPasswordComponent,\n  title: 'ResetPasswordComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ResetPasswordWithCodeComponent>",
                "defaultValue": "{\n  component: ResetPasswordWithCodeComponent,\n  title: 'ResetPasswordWithCodeComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SignupComponent>",
                "defaultValue": "{\n  component: SignupComponent,\n  title: 'SignupComponent',\n  decorators: [moduleMetadata({ imports: [BrowserAnimationsModule] })],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteComponent>",
                "defaultValue": "{\n  component: AutocompleteComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'AutocompleteComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n  component: CheckboxComponent,\n  title: 'CheckboxComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateComponent>",
                "defaultValue": "{\n  component: DateComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'DateComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateTimeComponent>",
                "defaultValue": "{\n  component: DateTimeComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'DateTimeComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<EditorComponent>",
                "defaultValue": "{\n  component: EditorComponent,\n  title: 'EditorComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormInputComponent>",
                "defaultValue": "{\n  component: FormInputComponent,\n  title: 'FormInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioComponent>",
                "defaultValue": "{\n  component: RadioComponent,\n  title: 'RadioComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleFormComponent>",
                "defaultValue": "{\n  component: SampleFormComponent,\n  title: 'SampleFormComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n  component: SelectComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'SelectComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SwitchComponent>",
                "defaultValue": "{\n  component: SwitchComponent,\n  title: 'SwitchComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextInputComponent>",
                "defaultValue": "{\n  component: TextInputComponent,\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'TextInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaInputComponent>",
                "defaultValue": "{\n  component: TextareaInputComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'TextareaInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppLayoutComponent>",
                "defaultValue": "{\n  component: AppLayoutComponent,\n  title: 'AppLayoutComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n      providers: [\n        provideAppName('AppName'),\n        provideModuleName('ModuleName'),\n        LocalStoreService,\n        provideNavItems([\n          {\n            name: 'Home',\n            icon: 'home',\n            route: '',\n            params: {},\n          },\n        ]),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MobileLayoutComponent>",
                "defaultValue": "{\n  component: MobileLayoutComponent,\n  title: 'MobileLayoutComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<WebLayoutComponent>",
                "defaultValue": "{\n  component: WebLayoutComponent,\n  title: 'WebLayoutComponent',\n}"
            },
            {
                "name": "MODULE_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'MODULE_NAME_TOKEN'",
                "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
            },
            {
                "name": "NAV_ITEMS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'NAV_ITEMS_TOKEN'"
            },
            {
                "name": "PasswordValidator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/validators/password-validator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ValidatorFn",
                "defaultValue": "(control: AbstractControl) => {\r\n  const upperCase = /[A-Z]{1,}/;\r\n  const lowerCase = /[a-z]{1,}/;\r\n  const number = /[0-9]{1,}/;\r\n  const specials = /[~!@#$%^&*()_+{}:\"<>?\\\\[\\]\\\\;',\\\\.\\\\/]{1,}/;\r\n  const value = control.value;\r\n  if (value) {\r\n    if (!upperCase.test(value))\r\n      return { password: 'Field must contain at least one upper-case value ' };\r\n    if (!lowerCase.test(value))\r\n      return { password: 'Field must contain at least one lower-case value ' };\r\n    if (!number.test(value))\r\n      return { password: 'Field must contain at least one number value ' };\r\n    if (!specials.test(value))\r\n      return {\r\n        password: 'Field must contain at least one special character value ',\r\n      };\r\n  }\r\n\r\n  return null;\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    componentType: 'text-input',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "resetPasswordForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl(''),\n  newPassword: new FormControl('', [PasswordValidator]),\n  confirmPassword: new FormControl('', [PasswordValidator]),\n})"
            },
            {
                "name": "resetPasswordWithCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  securityCode: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n  newPassword: new FormControl('', [Validators.required, PasswordValidator]),\n  confirmPassword: new FormControl('', [\n    Validators.required,\n    PasswordValidator,\n  ]),\n})"
            },
            {
                "name": "SEARCH_CONTROL_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'SEARCH_CONTROL_TOKEN'"
            },
            {
                "name": "signupFormGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/auth/signup/signup.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [PasswordValidator]),\n})"
            },
            {
                "name": "TABLE_COLUMNS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'TABLE_COLUMNS_TOKEN'"
            },
            {
                "name": "UrlInterceptorFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
            },
            {
                "name": "VIEW_COMPONENT_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/view.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'VIEW_COMPONENT_TOKEN'"
            }
        ],
        "functions": [
            {
                "name": "delayObservable",
                "file": "libs/material/src/lib/api/utils/delay-observable.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "obserbable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "obserbable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "DisableWeekEndsStategy",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAppName",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDatePickerFilter",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDateRangeSelectionStrategy",
                "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideEntityName",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFieldAppearance",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFields",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormGroup",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideModuleName",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Module name and app name is used for common services to identify the resource.\nFor exmaple LocalStore services use appname and module name to persist configurations in browser localstoreage.</p>\n",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 919,
                            "end": 926,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "appName"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 913,
                            "end": 918,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "tagName": {
                            "pos": 932,
                            "end": 939,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "provideNavItems",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideSearchControl",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Provider"
            },
            {
                "name": "provideTableColumns",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideViewComponent",
                "file": "libs/material/src/lib/api/providers/view.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 180,
                            "end": 193,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "viewComponent"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 174,
                            "end": 179,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Table, List, CardGrid etc.</p>\n"
                    },
                    {
                        "tagName": {
                            "pos": 226,
                            "end": 233,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AutocompleteOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "EntityMetadata",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ErrorType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InputOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/types/input-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "LoginData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/auth/login/login.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "NavItemParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "QueryObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ResetPasswordData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ResetPasswordWithCodeData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SelectItemOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SignupData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/auth/signup/signup.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoginComponent>",
                "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ResetPasswordComponent>",
                "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ResetPasswordWithCodeComponent>",
                "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SignupComponent>",
                "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteComponent>",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateComponent>",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateTimeComponent>",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<EditorComponent>",
                "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormInputComponent>",
                "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioComponent>",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleFormComponent>",
                "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchComponent>",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextInputComponent>",
                "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaInputComponent>",
                "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppLayoutComponent>",
                "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MobileLayoutComponent>",
                "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<WebLayoutComponent>",
                "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TableColumn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/lib/api/providers/app-config.provider.ts": [
                {
                    "name": "APP_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'APP_NAME_TOKEN'",
                    "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                    "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
                },
                {
                    "name": "MODULE_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'MODULE_NAME_TOKEN'",
                    "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                    "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
                }
            ],
            "libs/material/src/lib/api/providers/date-filter.provider.ts": [
                {
                    "name": "DATE_PICKER_FILTER_STRATEGY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
                }
            ],
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "ENTITY_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ENTITY_NAME_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "FORM_FIELD_APPEARANCE_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
                },
                {
                    "name": "FORM_FIELDS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELDS_TOKEN'",
                    "rawdescription": "Inject list of FormFields",
                    "description": "<p>Inject list of FormFields</p>\n"
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      providers: [\r\n        provideTableColumns([\r\n          { name: 'name', label: 'Name' },\r\n          { name: 'description', label: 'Description' },\r\n        ]),\r\n        provideSearchControl(),\r\n        LocalStoreService,\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockTableService,\r\n        },\r\n        provideEntityName('Entity'),\r\n        provideAppName('AppName'),\r\n        provideModuleName('ModuleName'),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/auth/login/login.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/login works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoginComponent>",
                    "defaultValue": "{\n  component: LoginComponent,\n  title: 'LoginComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/reset-password works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ResetPasswordComponent>",
                    "defaultValue": "{\n  component: ResetPasswordComponent,\n  title: 'ResetPasswordComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/reset-password-with-code works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ResetPasswordWithCodeComponent>",
                    "defaultValue": "{\n  component: ResetPasswordWithCodeComponent,\n  title: 'ResetPasswordWithCodeComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/auth/signup/signup.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/signup works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SignupComponent>",
                    "defaultValue": "{\n  component: SignupComponent,\n  title: 'SignupComponent',\n  decorators: [moduleMetadata({ imports: [BrowserAnimationsModule] })],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/autocomplete works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteComponent>",
                    "defaultValue": "{\n  component: AutocompleteComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'AutocompleteComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n  component: CheckboxComponent,\n  title: 'CheckboxComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateComponent>",
                    "defaultValue": "{\n  component: DateComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'DateComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateTimeComponent>",
                    "defaultValue": "{\n  component: DateTimeComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'DateTimeComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/editor/editor.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/editor works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<EditorComponent>",
                    "defaultValue": "{\n  component: EditorComponent,\n  title: 'EditorComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/form-input/form-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    componentType: 'text-input',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormInputComponent>",
                    "defaultValue": "{\n  component: FormInputComponent,\n  title: 'FormInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    componentType: 'text-input',\n  },\n}"
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioComponent>",
                    "defaultValue": "{\n  component: RadioComponent,\n  title: 'RadioComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleFormComponent>",
                    "defaultValue": "{\n  component: SampleFormComponent,\n  title: 'SampleFormComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n  component: SelectComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'SelectComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SwitchComponent>",
                    "defaultValue": "{\n  component: SwitchComponent,\n  title: 'SwitchComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextInputComponent>",
                    "defaultValue": "{\n  component: TextInputComponent,\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'TextInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/textarea-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaInputComponent>",
                    "defaultValue": "{\n  component: TextareaInputComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n  title: 'TextareaInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-layout works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppLayoutComponent>",
                    "defaultValue": "{\n  component: AppLayoutComponent,\n  title: 'AppLayoutComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n      providers: [\n        provideAppName('AppName'),\n        provideModuleName('ModuleName'),\n        LocalStoreService,\n        provideNavItems([\n          {\n            name: 'Home',\n            icon: 'home',\n            route: '',\n            params: {},\n          },\n        ]),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/mobile-layout works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MobileLayoutComponent>",
                    "defaultValue": "{\n  component: MobileLayoutComponent,\n  title: 'MobileLayoutComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/web-layout works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<WebLayoutComponent>",
                    "defaultValue": "{\n  component: WebLayoutComponent,\n  title: 'WebLayoutComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/auth/login/login.component.ts": [
                {
                    "name": "loginFormGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/login/login.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n})"
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "NAV_ITEMS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'NAV_ITEMS_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/validators/password-validator.ts": [
                {
                    "name": "PasswordValidator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/validators/password-validator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn",
                    "defaultValue": "(control: AbstractControl) => {\r\n  const upperCase = /[A-Z]{1,}/;\r\n  const lowerCase = /[a-z]{1,}/;\r\n  const number = /[0-9]{1,}/;\r\n  const specials = /[~!@#$%^&*()_+{}:\"<>?\\\\[\\]\\\\;',\\\\.\\\\/]{1,}/;\r\n  const value = control.value;\r\n  if (value) {\r\n    if (!upperCase.test(value))\r\n      return { password: 'Field must contain at least one upper-case value ' };\r\n    if (!lowerCase.test(value))\r\n      return { password: 'Field must contain at least one lower-case value ' };\r\n    if (!number.test(value))\r\n      return { password: 'Field must contain at least one number value ' };\r\n    if (!specials.test(value))\r\n      return {\r\n        password: 'Field must contain at least one special character value ',\r\n      };\r\n  }\r\n\r\n  return null;\r\n}"
                }
            ],
            "libs/material/src/lib/auth/reset-password/reset-password.component.ts": [
                {
                    "name": "resetPasswordForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl(''),\n  newPassword: new FormControl('', [PasswordValidator]),\n  confirmPassword: new FormControl('', [PasswordValidator]),\n})"
                }
            ],
            "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts": [
                {
                    "name": "resetPasswordWithCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  securityCode: new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]),\n  newPassword: new FormControl('', [Validators.required, PasswordValidator]),\n  confirmPassword: new FormControl('', [\n    Validators.required,\n    PasswordValidator,\n  ]),\n})"
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "SEARCH_CONTROL_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'SEARCH_CONTROL_TOKEN'"
                },
                {
                    "name": "TABLE_COLUMNS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'TABLE_COLUMNS_TOKEN'"
                }
            ],
            "libs/material/src/lib/auth/signup/signup.component.ts": [
                {
                    "name": "signupFormGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/auth/signup/signup.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroup({\n  username: new FormControl('', [Validators.required, Validators.email]),\n  password: new FormControl('', [PasswordValidator]),\n})"
                }
            ],
            "libs/material/src/lib/api/middlewares/url.interceptor.ts": [
                {
                    "name": "UrlInterceptorFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
                }
            ],
            "libs/material/src/lib/api/providers/view.provider.ts": [
                {
                    "name": "VIEW_COMPONENT_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/view.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'VIEW_COMPONENT_TOKEN'"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/lib/api/utils/delay-observable.ts": [
                {
                    "name": "delayObservable",
                    "file": "libs/material/src/lib/api/utils/delay-observable.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "obserbable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "obserbable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/date-filter.provider.ts": [
                {
                    "name": "DisableWeekEndsStategy",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideDatePickerFilter",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/app-config.provider.ts": [
                {
                    "name": "provideAppName",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideModuleName",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Module name and app name is used for common services to identify the resource.\nFor exmaple LocalStore services use appname and module name to persist configurations in browser localstoreage.</p>\n",
                    "args": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 919,
                                "end": 926,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "appName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 913,
                                "end": 918,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 932,
                                "end": 939,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts": [
                {
                    "name": "provideDateRangeSelectionStrategy",
                    "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "provideEntityName",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "provideFormFieldAppearance",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormFields",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormGroup",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "provideNavItems",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "provideSearchControl",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Provider"
                },
                {
                    "name": "provideTableColumns",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/view.provider.ts": [
                {
                    "name": "provideViewComponent",
                    "file": "libs/material/src/lib/api/providers/view.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "viewComponent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 180,
                                "end": 193,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "viewComponent"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 174,
                                "end": 179,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Table, List, CardGrid etc.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 226,
                                "end": 233,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/lib/form/autocomplete/autocomplete.service.ts": [
                {
                    "name": "AutocompleteOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "EntityMetadata",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "ErrorType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "QueryObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "SelectItemOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/types/input-options.ts": [
                {
                    "name": "InputOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/types/input-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/auth/login/login.component.ts": [
                {
                    "name": "LoginData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/auth/login/login.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "NavItemParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/auth/reset-password/reset-password.component.ts": [
                {
                    "name": "ResetPasswordData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts": [
                {
                    "name": "ResetPasswordWithCodeData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/auth/signup/signup.component.ts": [
                {
                    "name": "SignupData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/auth/signup/signup.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/auth/login/login.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoginComponent>",
                    "file": "libs/material/src/lib/auth/login/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ResetPasswordComponent>",
                    "file": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ResetPasswordWithCodeComponent>",
                    "file": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/auth/signup/signup.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SignupComponent>",
                    "file": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteComponent>",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateComponent>",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateTimeComponent>",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/editor/editor.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<EditorComponent>",
                    "file": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/form-input/form-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormInputComponent>",
                    "file": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioComponent>",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleFormComponent>",
                    "file": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchComponent>",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextInputComponent>",
                    "file": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaInputComponent>",
                    "file": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppLayoutComponent>",
                    "file": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MobileLayoutComponent>",
                    "file": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<WebLayoutComponent>",
                    "file": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "TableColumn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UrlInterceptorFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAppName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideModuleName",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_NAME_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODULE_NAME_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "DisableWeekEndsStategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDatePickerFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FiveDayRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekDaysStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekEndsStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDateRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFieldAppearance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELDS_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/input-filter.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InputValueFilter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideNavItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAV_ITEMS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideSearchControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideTableColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SEARCH_CONTROL_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TABLE_COLUMNS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/view.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/view.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VIEW_COMPONENT_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/can-active.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanActivateService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/local-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStoreService",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResourceService",
                "coveragePercent": 27,
                "coverageCount": "3/11",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideEntityName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY_NAME_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/utils/delay-observable.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "delayObservable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/validators/password-validator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/login/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/auth/login/login.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordWithCodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password-with-code/reset-password-with-code.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resetPasswordWithCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password/reset-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/reset-password/reset-password.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resetPasswordForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/signup/signup.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/auth/signup/signup.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signupFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteComponent",
                "coveragePercent": 21,
                "coverageCount": "6/28",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AutoCompleteService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/common-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonInputComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateTimeComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/editor/editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/editor/editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form-input/form-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form-input/form-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormInputComponent",
                "coveragePercent": 26,
                "coverageCount": "6/23",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/sample-form/sample-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/sample-form/sample-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleFormComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea-input/textarea-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea-input/textarea-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaInputComponent",
                "coveragePercent": 27,
                "coverageCount": "6/22",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/app-layout/app-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/app-layout/app-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/mobile-layout/mobile-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/web-layout/web-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/layouts/web-layout/web-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockTableService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            }
        ]
    }
}