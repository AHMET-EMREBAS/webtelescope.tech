@use 'sass:string';
@use 'color' as color;
@use 'class' as class;

$__styles: (dashed, dotted, double, groove, outset, ridge, solid, hidden, none);

@each $style in $__styles {
  @include class.createClasses(border-#{$style}, border-style, $style);

  @each $side in (left, top, right, bottom) {
    @include class.createClasses(
      border-#{$side}-#{$style},
      border-#{$side}-style,
      $style
    );
  }
}

@each $color in color.$themeColors {
  @include class.createClasses(
    border-#{$color},
    border-color,
    var(--#{$color})
  );

  @each $side in (left, top, right, bottom) {
    @include class.createClasses(
      border-#{$side}-#{$color},
      border-#{$side}-color,
      var(--#{$color})
    );
  }

  @each $colorVariant in color.$colorVariants {
    @include class.createClasses(
      border-#{$color}-#{$colorVariant},
      border-color,
      var(--#{$color}-#{$colorVariant})
    );

    @each $side in (left, top, right, bottom) {
      @include class.createClasses(
        border-#{$side}-#{$color}-#{$colorVariant},
        border-#{$side}-color,
        var(--#{$color}-#{$colorVariant})
      );
    }
  }
}

@for $i from 1 through 12 {
  @include class.createClasses(border-#{$i}, border-width, #{$i * 0.1}em);
  @include class.createClasses(border-radius-#{$i}, border-radius, #{$i}em);

  @each $side in (left, top, right, bottom) {
    @include class.createClasses(
      border-#{$side}-#{$i},
      border-#{$side}-width,
      #{$i * 0.1}em
    );
  }

  @each $y in (top, bottom) {
    @each $x in (left, right) {
      @include class.createClasses(
        border-#{$y}-#{$x}-radius-#{$i},
        border-#{$y}-#{$x}-radius,
        #{$i}em
      );
    }
  }
}
