@use 'sass:math';
@use 'sass:list';
@use 'color' as color;
@use 'const' as const;
@use 'utils' as utils;

$__styles: (solid, dashed, dotted, groove, ridge, outset);

@for $i from 1 through 12 {
  @each $style in (solid, dashed, dotted, groove, ridge, outset) {
    @each $color in color.$colorNames {
      .b-#{$style}-#{$color}-#{$i} {
        border: #{math.div($i, 4)}em #{$style} var(--#{$color});
      }

      @each $name, $values in const.$mediaSizes {
        $min: list.nth($values, 1);
        $max: list.nth($values, 2);

        @media screen and (width > #{$min}) and (width <= #{$max}) {
          .#{$name}-b-#{$style}-#{$color}-#{$i} {
            border: #{math.div($i, 4)}em #{$style} var(--#{$color}) !important;
          }
        }
      }

      @each $side in const.$sides {
        .b#{utils.firstLetter($side)}-#{$style}-#{$color}-#{$i} {
          border-#{$side}: #{math.div($i, 4)}em #{$style} var(--#{$color});
        }

        @each $name, $values in const.$mediaSizes {
          $min: list.nth($values, 1);
          $max: list.nth($values, 2);

          @media screen and (width > #{$min}) and (width <= #{$max}) {
            .#{$name}-b#{utils.firstLetter($side)}-#{$style}-#{$color}-#{$i} {
              border-#{$side}: #{math.div($i, 4)}em #{$style} var(--#{$color}) !important;
            }
          }
        }
      }
    }
  }
}
