$colorNames: (primary, accent, warn, success, error, 'white', 'black');

@function __colorMap($primary, $accent) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: orange,
    success: forestgreen,
    error: crimson,
    white: white,
    black: rgb(40, 40, 40)
  );
}

@function __faceColor($color) {
  $value: lightness($color);

  @if $value < 50 {
    @return #{var(--white)};
  } @else {
    @return #{var(--black)};
  }
}

@mixin __createColorVar($name, $value) {
  --#{$name}: #{$value};
  --#{$name}-light: #{lighten($value, 20)};
  --#{$name}-dark: #{darken($value, 20)};
  --#{$name}-face: #{__faceColor($value)};
}

@mixin __createColorClass($name) {
  .#{$name} {
    color: var(--#{$name});
  }
  .bg-#{$name} {
    background-color: var(--#{$name});
    color: var(--#{$name}-face);
  }

  @each $variant in (light, dark, face) {
    .#{$name}-#{$variant} {
      color: var(--#{$name}-#{$variant});
    }
    .bg-#{$name}-#{$variant} {
      background-color: var(--#{$name}-#{$variant});
    }
  }
}

@mixin init($primary, $accent) {
  $colorMap: __colorMap($primary, $accent);

  :root {
    @each $key, $value in $colorMap {
      @include __createColorVar($key, $value);
    }
  }

  @each $key, $value in $colorMap {
    @include __createColorClass($key);
  }
}
