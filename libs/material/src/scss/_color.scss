@use 'sass:color';
@use 'sass:string';

$colorList: (
  aliceblue,
  antiquewhite,
  aquamarine,
  azure,
  beige,
  bisque,
  black,
  blanchedalmond,
  blue,
  blueviolet,
  brown,
  burlywood,
  cadetblue,
  chartreuse,
  chocolate,
  coral,
  cornflowerblue,
  cornsilk,
  crimson,
  cyan,
  darkblue,
  darkcyan,
  darkgoldenrod,
  darkgray,
  darkgrey,
  darkgreen,
  darkkhaki,
  darkmagenta,
  darkolivegreen,
  darkorange,
  darkorchid,
  darkred,
  darksalmon,
  darkseagreen,
  darkslateblue,
  darkslategray,
  darkslategrey,
  darkturquoise,
  darkviolet,
  deeppink,
  deepskyblue,
  dimgray,
  dimgrey,
  dodgerblue,
  firebrick,
  floralwhite,
  forestgreen,
  fuchsia,
  gainsboro,
  ghostwhite,
  gold,
  goldenrod,
  gray,
  grey,
  green,
  greenyellow,
  honeydew,
  hotpink,
  indianred,
  indigo,
  ivory,
  khaki,
  lavender,
  lavenderblush,
  lawngreen,
  lemonchiffon,
  lightblue,
  lightcoral,
  lightcyan,
  lightgoldenrodyellow,
  lightgray,
  lightgrey,
  lightgreen,
  lightpink,
  lightsalmon,
  lightseagreen,
  lightskyblue,
  lightslategray,
  lightslategrey,
  lightsteelblue,
  lightyellow,
  lime,
  limegreen,
  linen,
  magenta,
  maroon,
  mediumaquamarine,
  mediumblue,
  mediumorchid,
  mediumpurple,
  mediumseagreen,
  mediumslateblue,
  mediumspringgreen,
  mediumturquoise,
  mediumvioletred,
  midnightblue,
  mintcream,
  mistyrose,
  moccasin,
  navajowhite,
  navy,
  oldlace,
  olive,
  olivedrab,
  orange,
  orangered,
  orchid,
  palegoldenrod,
  palegreen,
  paleturquoise,
  palevioletred,
  papayawhip,
  peachpuff,
  peru,
  pink,
  plum,
  powderblue,
  purple,
  rebeccapurple,
  red,
  rosybrown,
  royalblue,
  saddlebrown,
  salmon,
  sandybrown,
  seagreen,
  seashell,
  sienna,
  silver,
  skyblue,
  slateblue,
  slategray,
  slategrey,
  snow,
  springgreen,
  steelblue,
  tan,
  teal,
  thistle,
  tomato,
  turquoise,
  violet,
  wheat,
  white,
  whitesmoke,
  yellow,
  yellowgreen
);

$themeColors: (primary, accent, warn, error, info, 'white', 'black');

$colorVariants: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900);

@mixin createColorVariant($name, $value) {
  --#{$name}: #{$value};
  --#{$name}-50: #{color.change($value, $lightness: 90)};
  --#{$name}-100: #{color.change($value, $lightness: 80)};
  --#{$name}-200: #{color.change($value, $lightness: 70)};
  --#{$name}-300: #{color.change($value, $lightness: 60)};
  --#{$name}-400: #{color.change($value, $lightness: 50)};
  --#{$name}-500: #{color.change($value, $lightness: 40)};
  --#{$name}-600: #{color.change($value, $lightness: 30)};
  --#{$name}-700: #{color.change($value, $lightness: 20)};
  --#{$name}-800: #{color.change($value, $lightness: 15)};
  --#{$name}-900: #{color.change($value, $lightness: 10)};
}

@mixin builtinColors() {
  :root {
    @each $name in $colorList {
      @include createColorVariant($name, $name);
    }
  }

  @each $name in $colorList {
    .#{$name} {
      color: var(--#{$name});
    }
    @each $variant in $colorVariants {
      .#{$name}-#{$variant} {
        color: var(--#{$name}-#{$variant});
      }
    }
  }

  @each $name in $colorList {
    .bg-#{$name} {
      background-color: var(--#{$name});
    }

    @each $variant in $colorVariants {
      .bg-#{$name}-#{$variant} {
        background-color: var(--#{$name}-#{$variant});
      }
    }
  }
}

@mixin theme($colorMap) {
  @include builtinColors();

  :root {
    @each $name, $color in $colorMap {
      @include createColorVariant($name, $color);
    }
  }

  @each $name, $color in $colorMap {
    .#{$name} {
      color: var(--#{$name});
    }

    @each $variant in $colorVariants {
      .#{$name}-#{$variant} {
        color: var(--#{$name}-#{$variant});
      }
    }

    .bg-#{$name} {
      background-color: var(--#{$name});
    }

    @each $variant in $colorVariants {
      .bg-#{$name}-#{$variant} {
        background-color: var(--#{$name}-#{$variant});
      }
    }
  }
}
