/** Button classes are allowed to use button  element only */

$buttonTypes: (basic, raised, stroked, flat, icon, fab, mini-fab);
$colorNames: (primary, secondary, accent, warn, red, green, black, white);

/** Buttons should be relative for managing before and after pesudo elements. We are getting rid of default button values */
.common-btn {
  position: relative;
  overflow: hidden;
  border: none;
  border-radius: none;
  outline: none;
  cursor: pointer;
  font-family: var(--root-font-family);
  text-transform: capitalize;
}

button.basic-btn {
  @extend .common-btn;
  height: 3rem;
  min-width: 6rem;
  background-color: transparent;
}

@keyframes bubble {
  0% {
    width: 0;
    height: 0;
  }
  100% {
    width: 400px;
    height: 400px;
  }
}
@mixin btnAnimations($color) {
  button.#{$color}:hover {
    background-color: #{var(--#{$color}-opacity-3)};
    transition: background-color 400ms ease;
  }

  button.#{$color}:active::before {
    position: absolute;
    content: '';
    width: 400px;
    height: 400px;
    left: 50%;
    top: 50%;
    z-index: 1;
    border-radius: 100%;

    background-color: var(--#{$color}-opacity-3);
    transform: translateX(-50%) translateY(-50%);
    box-shadow: 0px 0px 10px var(--#{$color}-opacity-6),
      0px 0px 20px var(--#{$color}-opacity-3),
      0px 0px 30px var(--#{$color}-opacity-6);
    animation-name: bubble;
    animation-duration: 600ms;
    animation-timing-function: ease;
  }
}

@each $colorName in $colorNames {
  button.#{$colorName} {
    color: var(--#{$colorName});
  }

  @include btnAnimations($colorName);
}

.animation-container {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0px;
  top: 0px;
}
